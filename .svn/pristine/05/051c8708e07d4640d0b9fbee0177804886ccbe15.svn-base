<MetroUI:MetroWindow x:Class="Nova.SmartLCT.UI.WinBrightAdjust"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:GalaSoft_MvvmLight_Command="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
                     xmlns:MetroUI="clr-namespace:Nova.SmartLCT.UI.MetroUI;assembly=Nova.SmartLCT.UI.MetroUI"
                     xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                     xmlns:Nova_SmartLCT_Behavior="clr-namespace:Nova.SmartLCT.Behavior;assembly=Behavior"
                     xmlns:Nova_SmartLCT_Interface="clr-namespace:Nova.SmartLCT.Interface;assembly=Nova.SmartLCT.Interface.CommonData"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
                     xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                     xmlns:local="clr-namespace:Nova.SmartLCT.UI"
                     xmlns:localInterface="clr-namespace:Nova.SmartLCT.Interface;assembly=Nova.SmartLCT.Interface.CommonData"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     Title="{Binding WindowDisplayTitle,
                                     Mode=OneWay}"
                     Width="640"
                     Height="655"
                     Background="#FF303435"
                     Foreground="Gainsboro"
                     ResizeMode="NoResize"
                     mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="Lang\Bright.en.xaml" />-->
                <!--<ResourceDictionary Source="/Nova.SmartLCT.Skin;Component/BlueMode/BlueMood.UI.xaml"/>
                <ResourceDictionary Source="/Nova.SmartLCT.Skin;Component/BlueMode/BlueMood.Color.xaml"/>-->
                <ResourceDictionary Source="UIResources.xaml" />
                <ResourceDictionary Source="Simple Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <localInterface:DateTimeTimeShowConvertor x:Key="DateTimeTimeShowConvertor" />
            <localInterface:BrightPercentAvailableConverter x:Key="BrightPercentAvailableConverter" />
            <localInterface:WeekList2StringConverter x:Key="WeekList2StringConverter" />
            <localInterface:AdjustBrightModeConvertIsCheck x:Key="AdjustBrightModeConvertIsCheck" />
            <localInterface:BrightAdjustDataConvertEnabled x:Key="BrightAdjustDataConvertEnabled" />
            <local:ColorTempConvertor x:Key="ColorTempConvertor" />
            <local:BrightGainParams x:Key="BrightGainParamsDataSource" d:IsDataSource="True" />
            <localInterface:BoolReversalVisibilityConvertor x:Key="BoolReversalVisibilityConvertor" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <local:BrightPercentConvertor x:Key="BrightPercentConvertor" />
            <local:GammaConvertor x:Key="GammaConvertor" />
            <localInterface:EnumBoolConverter x:Key="EnumBoolConverter" />
            <local:WinBrightAdjust_VM x:Key="WinBrightAdjust_VMDataSource" d:IsDataSource="True" />






            <LinearGradientBrush x:Key="TextBoxBorder" MappingMode="Absolute" StartPoint="0,0" EndPoint="0,20">
                <GradientStop Offset="0.05" Color="#ABADB3" />
                <GradientStop Offset="0.07" Color="#E2E3EA" />
                <GradientStop Offset="1" Color="#E3E9EF" />
            </LinearGradientBrush>

            <Style x:Key="bButtonFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2"
                                       SnapsToDevicePixels="true"
                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       StrokeDashArray="1 2"
                                       StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="bButtonNormalBackground" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0" Color="#F3F3F3" />
                <GradientStop Offset="0.5" Color="#EBEBEB" />
                <GradientStop Offset="0.5" Color="#DDDDDD" />
                <GradientStop Offset="1" Color="#CDCDCD" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="bButtonNormalBorder" Color="#FF707070" />
            <Style TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource bButtonFocusVisual}" />
                <Setter Property="Background" Value="{StaticResource bButtonNormalBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource bButtonNormalBorder}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    BorderBrush="Black"
                                    BorderThickness="1"
                                    CornerRadius="3">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">



                                        <GradientStop Offset="0" Color="#FF3995DE" />
                                        <GradientStop Offset="1" Color="#FF057AD7" />
                                        <GradientStop Offset="0.525" Color="#FF057AD7" />
                                        <GradientStop Offset="0.495" Color="#FF3995DE" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <TextBlock HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Text="{TemplateBinding Content}"
                                           TextWrapping="Wrap" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Offset="0" Color="#FF75ECF2" />
                                                <GradientStop Offset="1" Color="#FF19E0E7" />
                                                <GradientStop Offset="0.5" Color="#FF19E0E7" />
                                                <GradientStop Offset="0.495" Color="#FF75ECF2" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true" />
                                <Trigger Property="ToggleButton.IsChecked" Value="true" />
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TextBoxStyle1"
                   BasedOn="{x:Null}"
                   TargetType="{x:Type TextBox}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="AllowDrop" Value="true" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Microsoft_Windows_Themes:ListBoxChrome x:Name="Bd"
                                                                    Background="{TemplateBinding Background}"
                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                                                                    RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                                    SnapsToDevicePixels="true">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Background="{TemplateBinding Background}"
                                              Padding="1"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Template="{DynamicResource ScrollViewerControlTemplate_text}" />
                            </Microsoft_Windows_Themes:ListBoxChrome>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="VerticalScrollBarBackground" StartPoint="0,0" EndPoint="1,0">
                <GradientStop Offset="0" Color="#E1E1E1" />
                <GradientStop Offset="0.20" Color="#EDEDED" />
                <GradientStop Offset="0.80" Color="#EDEDED" />
                <GradientStop Offset="1" Color="#E3E3E3" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4" />
            <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Grid>
                                <Rectangle Width="{TemplateBinding Width}"
                                           Height="{TemplateBinding Height}"
                                           Fill="{TemplateBinding Background}" />
                                <ed:RegularPolygon Width="6"
                                                   Height="4"
                                                   Margin="0"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Fill="#FF303435"
                                                   InnerRadius="1"
                                                   PointCount="3"
                                                   RenderTransformOrigin="0.5,0.5"
                                                   Stretch="Fill">
                                    <ed:RegularPolygon.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1" />
                                            <SkewTransform />
                                            <RotateTransform Angle="90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </ed:RegularPolygon.RenderTransform>
                                </ed:RegularPolygon>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Width="{TemplateBinding Width}"
                                       Height="{TemplateBinding Height}"
                                       Fill="{TemplateBinding Background}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="#FF4A4B4D"
                                    BorderThickness="1,0,0,0">
                                <Border BorderBrush="#FF303435" BorderThickness="1,0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#FFAFAFAF" />
                                            <GradientStop Offset="1" Color="#FF686464" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="HorizontalScrollBarBackground" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0" Color="#E1E1E1" />
                <GradientStop Offset="0.20" Color="#EDEDED" />
                <GradientStop Offset="0.80" Color="#EDEDED" />
                <GradientStop Offset="1" Color="#E3E3E3" />
            </LinearGradientBrush>
            <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Width="{TemplateBinding Width}"
                                       Height="{TemplateBinding Height}"
                                       Fill="{TemplateBinding Background}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarStyle_Bright" TargetType="{x:Type ScrollBar}">
                <Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}" />
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg"
                                  Background="{TemplateBinding Background}"
                                  SnapsToDevicePixels="true">
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                    <RowDefinition Height="0.00001*" />
                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                </Grid.RowDefinitions>
                                <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"
                                              Style="{StaticResource ScrollBarButton}" />
                                <Track x:Name="PART_Track"
                                       Grid.Row="1"
                                       IsDirectionReversed="true"
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper" Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Grid.Row="2"
                                              Command="{x:Static ScrollBar.LineDownCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"
                                              Style="{StaticResource ScrollBarButton}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Bg" Property="Background" Value="{StaticResource ScrollBarDisabledBackground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto" />
                        <Setter Property="MinWidth" Value="0" />
                        <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                        <Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg"
                                          Background="{TemplateBinding Background}"
                                          SnapsToDevicePixels="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                            <ColumnDefinition Width="0.00001*" />
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                        </Grid.ColumnDefinitions>
                                        <RepeatButton Background="#FF646464"
                                                      Command="{x:Static ScrollBar.LineLeftCommand}"
                                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                                      Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"
                                                      Style="{StaticResource ScrollBarButton}" />
                                        <Track x:Name="PART_Track"
                                               Grid.Column="1"
                                               IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Background="#FFB84545"
                                                       Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"
                                                       Style="{StaticResource ScrollBarThumb}" />
                                            </Track.Thumb>
                                        </Track>
                                        <RepeatButton Grid.Column="2"
                                                      Background="#FF646464"
                                                      Command="{x:Static ScrollBar.LineRightCommand}"
                                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                                      Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"
                                                      Style="{DynamicResource RepeatButtonStyle_Right}" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="Bg" Property="Background" Value="{StaticResource ScrollBarDisabledBackground}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="RepeatButtonStyle_Right" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Grid>
                                <Rectangle Width="{TemplateBinding Width}"
                                           Height="{TemplateBinding Height}"
                                           Fill="{TemplateBinding Background}" />
                                <ed:RegularPolygon Width="6"
                                                   Height="4"
                                                   Margin="0"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Fill="#FF303435"
                                                   InnerRadius="1"
                                                   PointCount="3"
                                                   RenderTransformOrigin="0.5,0.5"
                                                   Stretch="Fill">
                                    <ed:RegularPolygon.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1" />
                                            <SkewTransform />
                                            <RotateTransform Angle="270" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </ed:RegularPolygon.RenderTransform>
                                </ed:RegularPolygon>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ScrollViewerControlTemplate_text" TargetType="{x:Type ScrollViewer}">
                <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Margin="{TemplateBinding Padding}"
                                            CanContentScroll="{TemplateBinding CanContentScroll}"
                                            CanHorizontallyScroll="False"
                                            CanVerticallyScroll="False"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                    <ScrollBar x:Name="PART_VerticalScrollBar"
                               Grid.Row="0"
                               Grid.Column="1"
                               AutomationProperties.AutomationId="VerticalScrollBar"
                               Background="{x:Null}"
                               Cursor="Arrow"
                               Maximum="{TemplateBinding ScrollableHeight}"
                               Minimum="0"
                               ViewportSize="{TemplateBinding ViewportHeight}"
                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                               Value="{Binding VerticalOffset,
                                               Mode=OneWay,
                                               RelativeSource={RelativeSource TemplatedParent}}" />
                    <ScrollBar x:Name="PART_HorizontalScrollBar"
                               Grid.Row="1"
                               Grid.Column="0"
                               AutomationProperties.AutomationId="HorizontalScrollBar"
                               Background="{x:Null}"
                               Cursor="Arrow"
                               Maximum="{TemplateBinding ScrollableWidth}"
                               Minimum="0"
                               Orientation="Horizontal"
                               ViewportSize="{TemplateBinding ViewportWidth}"
                               Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                               Value="{Binding HorizontalOffset,
                                               Mode=OneWay,
                                               RelativeSource={RelativeSource TemplatedParent}}" />
                    <Rectangle x:Name="Corner"
                               Grid.Row="1"
                               Grid.Column="1"
                               Fill="{x:Null}" />
                </Grid>
            </ControlTemplate>
            <DataTemplate x:Key="DT_BrightScreenContainer">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <GroupBox x:Name="GroupBox_AdjustMode"
                                  Height="54"
                                  Margin="0,3,0,0"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Top"
                                  Header="{DynamicResource Lang_Bright_AdjustType}">
                            <Canvas>
                                <RadioButton x:Name="RadioButton_manualAdjust"
                                             Canvas.Left="55"
                                             Canvas.Top="10"
                                             Width="Auto"
                                             Height="Auto"
                                             HorizontalAlignment="Left"
                                             VerticalAlignment="Stretch"
                                             Content="{DynamicResource Lang_Bright_ManualAdjust}"
                                             Foreground="Gainsboro"
                                             IsChecked="{Binding SelectedBrightAdjustMode,
                                                                 ConverterParameter=Manual,
                                                                 Converter={StaticResource EnumBoolConverter}}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding CmdBrightAdjustModeClick, Mode=OneWay}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </RadioButton>
                                <!--<RadioButton x:Name="RadioButton_autoAdjust" Content="{DynamicResource Lang_Bright_AutoAdjust}" HorizontalAlignment="Left" VerticalAlignment="Stretch" Canvas.Top="10" Canvas.Left="395" Foreground="Gainsboro" IsChecked="{Binding SelectedAdjustBrightMode, ConverterParameter=Auto, Converter={StaticResource AdjustBrightModeConvertIsCheck1}, Mode=TwoWay}"/>-->
                                <RadioButton x:Name="RadioButton_timingAdjust"
                                             Canvas.Left="217"
                                             Canvas.Top="10"
                                             HorizontalAlignment="Left"
                                             VerticalAlignment="Stretch"
                                             Content="{DynamicResource Lang_Bright_TimingAdjust}"
                                             Foreground="Gainsboro"
                                             IsChecked="{Binding SelectedBrightAdjustMode,
                                                                 ConverterParameter=SmartBright,
                                                                 Converter={StaticResource EnumBoolConverter}}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding CmdBrightAdjustModeClick, Mode=OneWay}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </RadioButton>
                            </Canvas>
                        </GroupBox>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid Name="ManualMode" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=RadioButton_manualAdjust}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.27*" />
                                <RowDefinition Height="0.17*" />
                                <RowDefinition Height="0.27*" />
                                <RowDefinition Height="0.29*" />
                            </Grid.RowDefinitions>
                            <GroupBox Grid.Row="0"
                                      Margin="0,0,0,-0.085"
                                      Header="{DynamicResource Lang_Bright_GammaAdjust}"
                                      d:LayoutOverrides="Height">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.5*" />
                                        <ColumnDefinition Width="0.5*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.597*" />
                                        <RowDefinition Height="0.403*" />
                                    </Grid.RowDefinitions>
                                    <GroupBox Header="{DynamicResource Lang_Bright_ScreenQuality}" d:LayoutOverrides="Height">
                                        <Grid>
                                            <RadioButton Margin="45,0,0,0"
                                                         HorizontalAlignment="Left"
                                                         VerticalAlignment="Center"
                                                         Background="White"
                                                         Content="{DynamicResource Lang_Bright_QualitySoft}"
                                                         Foreground="Gainsboro"
                                                         IsChecked="{Binding ScreenDisplayQuality,
                                                                             ConverterParameter=Soft,
                                                                             Converter={StaticResource EnumBoolConverter},
                                                                             Mode=TwoWay,
                                                                             UpdateSourceTrigger=PropertyChanged}" />
                                            <RadioButton Margin="155,0,0,0"
                                                         HorizontalAlignment="Left"
                                                         VerticalAlignment="Center"
                                                         Background="White"
                                                         Content="{DynamicResource Lang_Bright_QualityEnhanced}"
                                                         Foreground="Gainsboro"
                                                         IsChecked="{Binding ScreenDisplayQuality,
                                                                             ConverterParameter=Enhance,
                                                                             Converter={StaticResource EnumBoolConverter},
                                                                             Mode=TwoWay,
                                                                             UpdateSourceTrigger=PropertyChanged}" />
                                        </Grid>
                                    </GroupBox>
                                    <GroupBox Grid.Column="1"
                                              Header="{DynamicResource Lang_Bright_GammaMode}"
                                              d:LayoutOverrides="Width">
                                        <Grid>
                                            <RadioButton Margin="45,0,0,0"
                                                         HorizontalAlignment="Left"
                                                         VerticalAlignment="Center"
                                                         Background="White"
                                                         Content="{DynamicResource Lang_Bright_GammaModeA}"
                                                         Foreground="Gainsboro"
                                                         IsChecked="{Binding GammaDisplayABMode,
                                                                             ConverterParameter=GammaA,
                                                                             Converter={StaticResource EnumBoolConverter},
                                                                             Mode=TwoWay,
                                                                             UpdateSourceTrigger=PropertyChanged}" />
                                            <RadioButton Margin="155,0,0,0"
                                                         HorizontalAlignment="Left"
                                                         VerticalAlignment="Center"
                                                         Background="White"
                                                         Content="{DynamicResource Lang_Bright_GammaModeB}"
                                                         Foreground="Gainsboro"
                                                         IsChecked="{Binding GammaDisplayABMode,
                                                                             ConverterParameter=GammaB,
                                                                             Converter={StaticResource EnumBoolConverter},
                                                                             Mode=TwoWay,
                                                                             UpdateSourceTrigger=PropertyChanged}" />
                                        </Grid>
                                    </GroupBox>
                                    <ScrollBar Grid.Row="1"
                                               Grid.ColumnSpan="2"
                                               Height="20"
                                               Margin="20,10,160,0"
                                               VerticalAlignment="Top"
                                               Background="#FF4B4B4B"
                                               LargeChange="1"
                                               Maximum="40"
                                               Minimum="10"
                                               Orientation="Horizontal"
                                               SmallChange="1"
                                               Style="{DynamicResource ScrollBarStyle_Bright}"
                                               Value="{Binding GammaValue,
                                                               Mode=TwoWay,
                                                               UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Scroll">
                                                <Nova_SmartLCT_Behavior:NotifyNoThumbTruckScroll Command="{Binding CmdSetGamma, Mode=OneWay}" CommandParameters="{Binding GammaValue}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ScrollBar>
                                    <TextBox Grid.Row="1"
                                             Grid.Column="1"
                                             Width="56"
                                             Margin="0,10,93.513,9.95"
                                             HorizontalAlignment="Right"
                                             VerticalAlignment="Top"
                                             Background="#FF4B4B4B"
                                             BorderBrush="{x:Null}"
                                             BorderThickness="0"
                                             Foreground="Gainsboro"
                                             IsEnabled="False"
                                             Style="{DynamicResource TextBoxStyle1}"
                                             Text="{Binding GammaValue,
                                                            Converter={StaticResource GammaConvertor},
                                                            Mode=TwoWay,
                                                            UpdateSourceTrigger=PropertyChanged}"
                                             TextAlignment="Right"
                                             TextWrapping="Wrap"
                                             d:LayoutOverrides="Height" />
                                </Grid>
                            </GroupBox>
                            <GroupBox Grid.Row="1"
                                      Height="Auto"
                                      Margin="0,0,0,2"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      Header="{DynamicResource Lang_Bright_BrightAdjust}"
                                      d:LayoutOverrides="GridBox">
                                <Grid>
                                    <TextBlock Margin="0,16,23.853,0"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Top"
                                               Text="{Binding GlobalBright,
                                                              Converter={StaticResource BrightPercentConvertor},
                                                              Mode=TwoWay,
                                                              UpdateSourceTrigger=PropertyChanged}"
                                               TextWrapping="Wrap" />
                                    <ScrollBar Grid.Row="0"
                                               Grid.ColumnSpan="1"
                                               Height="20"
                                               Margin="20,15,160,0"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Top"
                                               Background="#FF4B4B4B"
                                               LargeChange="1"
                                               Maximum="255"
                                               Minimum="0"
                                               Orientation="Horizontal"
                                               SmallChange="1"
                                               Style="{DynamicResource ScrollBarStyle_Bright}"
                                               Value="{Binding GlobalBright,
                                                               Mode=TwoWay,
                                                               UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Scroll">
                                                <Nova_SmartLCT_Behavior:NotifyNoThumbTruckScroll Command="{Binding CmdSetGlobalBright, Mode=OneWay}" CommandParameters="{Binding GlobalBright}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ScrollBar>
                                    <TextBox Grid.Row="0"
                                             Grid.Column="0"
                                             Width="56"
                                             Margin="0,15,91.513,0"
                                             HorizontalAlignment="Right"
                                             VerticalAlignment="Top"
                                             Background="#FF4B4B4B"
                                             BorderBrush="Black"
                                             BorderThickness="0"
                                             Foreground="Gainsboro"
                                             IsEnabled="False"
                                             RenderTransformOrigin="0.27,-2.528"
                                             Style="{DynamicResource TextBoxStyle1}"
                                             Text="{Binding GlobalBright,
                                                            Mode=TwoWay,
                                                            UpdateSourceTrigger=PropertyChanged}"
                                             TextAlignment="Right"
                                             TextWrapping="Wrap" />
                                </Grid>
                            </GroupBox>
                            <GroupBox Grid.Row="2"
                                      Grid.RowSpan="1"
                                      Height="Auto"
                                      Margin="0,0,0,2"
                                      HorizontalAlignment="Stretch"
                                      Header="{DynamicResource Lang_Bright_ColorTemperature}">
                                <Grid>
                                    <Grid Visibility="{Binding IsCustomRGBBright, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <TextBlock Margin="0,14,23.853,0"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Top"
                                                   Text="{Binding RedBright,
                                                                  Converter={StaticResource BrightPercentConvertor},
                                                                  Mode=TwoWay,
                                                                  UpdateSourceTrigger=PropertyChanged}"
                                                   TextWrapping="Wrap" />
                                        <TextBlock Margin="0,44,23.853,0"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Top"
                                                   Text="{Binding GreenBright,
                                                                  Converter={StaticResource BrightPercentConvertor},
                                                                  Mode=TwoWay,
                                                                  UpdateSourceTrigger=PropertyChanged}"
                                                   TextWrapping="Wrap" />
                                        <TextBlock Margin="0,74.034,23.853,0"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Top"
                                                   Text="{Binding BlueBright,
                                                                  Converter={StaticResource BrightPercentConvertor},
                                                                  Mode=TwoWay,
                                                                  UpdateSourceTrigger=PropertyChanged}"
                                                   TextWrapping="Wrap" />
                                        <CheckBox Margin="21,0,0,5"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Bottom"
                                                  Command="{Binding CmdSetSyncBright,
                                                                    Mode=OneWay}"
                                                  CommandParameter="{Binding IsSyncBright}"
                                                  Content="{DynamicResource Lang_Bright_Sync}"
                                                  Foreground="Gainsboro"
                                                  IsChecked="{Binding IsSyncBright,
                                                                      Mode=TwoWay,
                                                                      UpdateSourceTrigger=PropertyChanged}" />
                                        <ScrollBar Grid.Row="0"
                                                   Grid.ColumnSpan="1"
                                                   Height="20"
                                                   Margin="20,14,160,0"
                                                   HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Top"
                                                   Background="#FF4B4B4B"
                                                   Foreground="Gainsboro"
                                                   LargeChange="1"
                                                   Maximum="255"
                                                   Minimum="0"
                                                   Orientation="Horizontal"
                                                   SmallChange="1"
                                                   Style="{DynamicResource ScrollBarStyle_Bright}"
                                                   Value="{Binding RedBright,
                                                                   Mode=TwoWay,
                                                                   UpdateSourceTrigger=PropertyChanged}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Scroll">
                                                    <Nova_SmartLCT_Behavior:NotifyNoThumbTruckScroll Command="{Binding CmdSetRedBright, Mode=OneWay}" CommandParameters="{Binding RedBright}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ScrollBar>
                                        <ScrollBar Grid.Row="0"
                                                   Grid.ColumnSpan="1"
                                                   Height="20"
                                                   Margin="20,44,160,0"
                                                   HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Top"
                                                   Background="#FF4B4B4B"
                                                   Foreground="Gainsboro"
                                                   LargeChange="1"
                                                   Maximum="255"
                                                   Minimum="0"
                                                   Orientation="Horizontal"
                                                   SmallChange="1"
                                                   Style="{DynamicResource ScrollBarStyle_Bright}"
                                                   Value="{Binding GreenBright,
                                                                   Mode=TwoWay,
                                                                   UpdateSourceTrigger=PropertyChanged}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Scroll">
                                                    <Nova_SmartLCT_Behavior:NotifyNoThumbTruckScroll Command="{Binding CmdSetGreenBright, Mode=OneWay}" CommandParameters="{Binding GreenBright}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ScrollBar>
                                        <ScrollBar Grid.Row="0"
                                                   Grid.ColumnSpan="1"
                                                   Height="20"
                                                   Margin="20,74,160,0"
                                                   HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Top"
                                                   Background="#FF4B4B4B"
                                                   Foreground="Gainsboro"
                                                   LargeChange="1"
                                                   Maximum="255"
                                                   Minimum="0"
                                                   Orientation="Horizontal"
                                                   SmallChange="1"
                                                   Style="{DynamicResource ScrollBarStyle_Bright}"
                                                   Value="{Binding BlueBright,
                                                                   Mode=TwoWay,
                                                                   UpdateSourceTrigger=PropertyChanged}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Scroll">
                                                    <Nova_SmartLCT_Behavior:NotifyNoThumbTruckScroll Command="{Binding CmdSetBlueBright, Mode=OneWay}" CommandParameters="{Binding BlueBright}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ScrollBar>
                                        <TextBox Grid.Row="0"
                                                 Grid.Column="0"
                                                 Width="56"
                                                 Margin="0,14,89.513,0"
                                                 HorizontalAlignment="Right"
                                                 VerticalAlignment="Top"
                                                 Background="#FF4B4B4B"
                                                 BorderBrush="{x:Null}"
                                                 BorderThickness="0"
                                                 Foreground="Gainsboro"
                                                 IsEnabled="False"
                                                 RenderTransformOrigin="0.27,-2.528"
                                                 Style="{DynamicResource TextBoxStyle1}"
                                                 Text="{Binding RedBright,
                                                                Mode=TwoWay,
                                                                UpdateSourceTrigger=PropertyChanged}"
                                                 TextAlignment="Right"
                                                 TextWrapping="Wrap" />
                                        <TextBox Grid.Row="0"
                                                 Grid.Column="0"
                                                 Width="56"
                                                 Margin="0,44,89.513,0"
                                                 HorizontalAlignment="Right"
                                                 VerticalAlignment="Top"
                                                 Background="#FF4B4B4B"
                                                 BorderBrush="{x:Null}"
                                                 BorderThickness="0"
                                                 Foreground="Gainsboro"
                                                 IsEnabled="False"
                                                 RenderTransformOrigin="0.27,-2.528"
                                                 Style="{DynamicResource TextBoxStyle1}"
                                                 Text="{Binding GreenBright,
                                                                Mode=TwoWay,
                                                                UpdateSourceTrigger=PropertyChanged}"
                                                 TextAlignment="Right"
                                                 TextWrapping="Wrap" />
                                        <TextBox Grid.Row="0"
                                                 Grid.Column="0"
                                                 Width="56"
                                                 Margin="0,74,89.513,0"
                                                 HorizontalAlignment="Right"
                                                 VerticalAlignment="Top"
                                                 Background="#FF4B4B4B"
                                                 BorderBrush="{x:Null}"
                                                 BorderThickness="0"
                                                 Foreground="Gainsboro"
                                                 IsEnabled="False"
                                                 RenderTransformOrigin="0.27,-2.528"
                                                 Style="{DynamicResource TextBoxStyle1}"
                                                 Text="{Binding BlueBright,
                                                                Mode=TwoWay,
                                                                UpdateSourceTrigger=PropertyChanged}"
                                                 TextAlignment="Right"
                                                 TextWrapping="Wrap" />
                                    </Grid>
                                    <Grid Width="Auto"
                                          Margin="0"
                                          Visibility="{Binding IsCustomRGBBright,
                                                               Converter={StaticResource BoolReversalVisibilityConvertor}}">
                                        <TextBlock Margin="0,15,108.853,0"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Top"
                                                   Text="{Binding ColorTemp,
                                                                  Mode=TwoWay,
                                                                  UpdateSourceTrigger=PropertyChanged}"
                                                   TextWrapping="Wrap" />
                                        <TextBlock Margin="0,15,88.383,0"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Top"
                                                   Text="K"
                                                   TextWrapping="Wrap" />
                                        <Grid Height="21.837"
                                              Margin="54,49.055,184,0"
                                              VerticalAlignment="Top">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="0.238*" />
                                                <ColumnDefinition Width="0.261*" />
                                                <ColumnDefinition Width="0.269*" />
                                                <ColumnDefinition Width="0.232*" />
                                            </Grid.ColumnDefinitions>
                                            <Button Width="70"
                                                    Height="22"
                                                    Margin="0"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Command="{Binding CmdSetDefaultColorTemp,
                                                                      Mode=OneWay}"
                                                    CommandParameter="{Binding ColorTempTicksCollection[0]}"
                                                    Content="3000" />
                                            <Button Grid.Column="1"
                                                    Width="70"
                                                    Height="22"
                                                    Margin="0"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Command="{Binding CmdSetDefaultColorTemp,
                                                                      Mode=OneWay}"
                                                    CommandParameter="{Binding ColorTempTicksCollection[1]}"
                                                    Content="5000" />
                                            <Button Grid.Column="2"
                                                    Width="70"
                                                    Height="22"
                                                    Margin="0"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Command="{Binding CmdSetDefaultColorTemp,
                                                                      Mode=OneWay}"
                                                    CommandParameter="{Binding ColorTempTicksCollection[2]}"
                                                    Content="6500" />
                                            <Button Grid.Column="3"
                                                    Width="70"
                                                    Height="22"
                                                    Margin="0"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Command="{Binding CmdSetDefaultColorTemp,
                                                                      Mode=OneWay}"
                                                    CommandParameter="{Binding ColorTempTicksCollection[3]}"
                                                    Content="9300" />
                                        </Grid>
                                        <ScrollBar Grid.Row="0"
                                                   Grid.ColumnSpan="1"
                                                   Height="20"
                                                   Margin="20,15,160,0"
                                                   HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Top"
                                                   Background="#FF4B4B4B"
                                                   LargeChange="1"
                                                   Maximum="95"
                                                   Minimum="10"
                                                   Orientation="Horizontal"
                                                   SmallChange="1"
                                                   Style="{DynamicResource ScrollBarStyle_Bright}"
                                                   Value="{Binding ColorTemp,
                                                                   Converter={StaticResource ColorTempConvertor},
                                                                   Mode=TwoWay,
                                                                   UpdateSourceTrigger=PropertyChanged}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Scroll">
                                                    <Nova_SmartLCT_Behavior:NotifyNoThumbTruckScroll Command="{Binding CmdSetColorTemp, Mode=OneWay}" CommandParameters="{Binding ColorTemp}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ScrollBar>
                                    </Grid>
                                    <CheckBox Grid.Column="0"
                                              Margin="0,0,80.852,5"
                                              HorizontalAlignment="Right"
                                              VerticalAlignment="Bottom"
                                              Content="{DynamicResource Lang_Bright_Custom}"
                                              Foreground="Gainsboro"
                                              IsChecked="{Binding IsCustomRGBBright,
                                                                  Mode=TwoWay,
                                                                  UpdateSourceTrigger=PropertyChanged}" />
                                </Grid>
                            </GroupBox>
                            <GroupBox Grid.Row="3"
                                      Margin="0"
                                      HorizontalAlignment="Stretch"
                                      Header="{DynamicResource Lang_Bright_CurrentGain}"
                                      IsEnabled="{Binding IsSupportCurrentGain}">
                                <Grid Margin="0">
                                    <TextBlock Width="65"
                                               Margin="0,15,76.853,0"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Top"
                                               Text="{Binding RedGainPercent}"
                                               TextAlignment="Right"
                                               TextWrapping="Wrap" />
                                    <TextBlock Width="65"
                                               Margin="0,45,76.853,0"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Top"
                                               Text="{Binding GreenGainPercent}"
                                               TextAlignment="Right"
                                               TextWrapping="Wrap" />
                                    <TextBlock Width="65"
                                               Margin="0,75,76.853,0"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Top"
                                               Text="{Binding BlueGainPercent}"
                                               TextAlignment="Right"
                                               TextWrapping="Wrap" />
                                    <CheckBox Margin="21,105.376,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Top"
                                              Command="{Binding CmdSetSyncGain,
                                                                Mode=OneWay}"
                                              CommandParameter="{Binding IsSyncGain}"
                                              Content="{DynamicResource Lang_Bright_Sync}"
                                              Foreground="Gainsboro"
                                              IsChecked="{Binding IsSyncGain,
                                                                  Mode=TwoWay,
                                                                  UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBlock Margin="0,104.074,0,0"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Top"
                                               Text="{Binding ChipName}"
                                               TextWrapping="Wrap" />
                                    <Button Width="75"
                                            Height="22"
                                            Margin="0,0,111,2.198"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            Command="{Binding CmdSetDefalutCurGain,
                                                              Mode=OneWay}"
                                            Content="{DynamicResource Lang_Bright_DefaultCurrentGain}" />
                                    <ScrollBar Grid.Row="0"
                                               Grid.ColumnSpan="1"
                                               Height="20"
                                               Margin="20,15,160,0"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Top"
                                               Background="#FF4B4B4B"
                                               LargeChange="1"
                                               Maximum="{Binding MaxGainStep}"
                                               Minimum="0"
                                               Orientation="Horizontal"
                                               SmallChange="1"
                                               Style="{DynamicResource ScrollBarStyle_Bright}"
                                               Value="{Binding RedGain,
                                                               Mode=TwoWay,
                                                               UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Scroll">
                                                <Nova_SmartLCT_Behavior:NotifyNoThumbTruckScroll Command="{Binding CmdSetCurrentGain, Mode=OneWay}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ScrollBar>
                                    <ScrollBar Grid.Row="0"
                                               Grid.ColumnSpan="1"
                                               Height="20"
                                               Margin="20,45,160,0"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Top"
                                               Background="#FF4B4B4B"
                                               LargeChange="1"
                                               Maximum="{Binding MaxGainStep}"
                                               Minimum="0"
                                               Orientation="Horizontal"
                                               SmallChange="1"
                                               Style="{DynamicResource ScrollBarStyle_Bright}"
                                               Value="{Binding GreenGain,
                                                               Mode=TwoWay,
                                                               UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Scroll">
                                                <Nova_SmartLCT_Behavior:NotifyNoThumbTruckScroll Command="{Binding CmdSetCurrentGain, Mode=OneWay}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ScrollBar>
                                    <ScrollBar Grid.Row="0"
                                               Grid.ColumnSpan="1"
                                               Height="20"
                                               Margin="20,75,160,0"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Top"
                                               Background="#FF4B4B4B"
                                               LargeChange="1"
                                               Maximum="{Binding MaxGainStep}"
                                               Minimum="0"
                                               Orientation="Horizontal"
                                               SmallChange="1"
                                               Style="{DynamicResource ScrollBarStyle_Bright}"
                                               Value="{Binding BlueGain,
                                                               Mode=TwoWay,
                                                               UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Scroll">
                                                <Nova_SmartLCT_Behavior:NotifyNoThumbTruckScroll Command="{Binding CmdSetCurrentGain, Mode=OneWay}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ScrollBar>
                                </Grid>
                            </GroupBox>
                            <Button Grid.Row="3"
                                    Width="75"
                                    Height="22"
                                    Margin="0,0,34.5,8.014"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    Command="{Binding CmdReadScanBdProp,
                                                      Mode=OneWay}"
                                    Content="{DynamicResource Lang_Bright_Refresh}" />
                        </Grid>
                        <Grid x:Name="Grid_TimingAdjustMode"
                              Grid.Row="0"
                              Width="Auto"
                              Height="Auto"
                              Margin="0"
                              Visibility="{Binding IsChecked,
                                                   Converter={StaticResource BooleanToVisibilityConverter},
                                                   ElementName=RadioButton_timingAdjust}">
                            <DataGrid Margin="0,4,0,51"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      AutoGenerateColumns="False"
                                      Background="#FF414244"
                                      BorderBrush="#FF545454"
                                      CanUserAddRows="False"
                                      CellStyle="{DynamicResource DataGridCellStyle_common}"
                                      ColumnHeaderHeight="28"
                                      ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle_common}"
                                      Foreground="Gainsboro"
                                      IsSynchronizedWithCurrentItem="False"
                                      ItemsSource="{Binding DisplaySmartBrightCfg}"
                                      MinRowHeight="30"
                                      RowHeaderStyle="{DynamicResource DataGridRowHeaderStyle_common}"
                                      RowStyle="{DynamicResource DataGridRowStyle_common}"
                                      SelectedItem="{Binding SelectedSmartBrightItem,
                                                             Mode=TwoWay}"
                                      Style="{DynamicResource DataGridStyle1}">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Header="{DynamicResource Lang_Bright_IsStart}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <CheckBox HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          IsChecked="{Binding IsConfigEnable,
                                                                              Mode=TwoWay,
                                                                              UpdateSourceTrigger=PropertyChanged}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Width="110"
                                                        Binding="{Binding StartTime,
                                                                          Converter={StaticResource DateTimeTimeShowConvertor}}"
                                                        Header="{DynamicResource Lang_Bright_Time}"
                                                        IsReadOnly="True" />
                                    <!--<DataGridCheckBoxColumn Header="{DynamicResource Lang_Bright_IsStart}" Binding="{Binding IsStartUsing, Mode=TwoWay}"/>-->
                                    <DataGridTextColumn Width="120"
                                                        Binding="{Binding ScheduleType}"
                                                        Header="{DynamicResource Lang_Bright_ControlMode}"
                                                        IsReadOnly="True" />
                                    <DataGridTextColumn Width="220"
                                                        Binding="{Binding CustomDayCollection,
                                                                          Converter={StaticResource WeekList2StringConverter}}"
                                                        Header="{DynamicResource Lang_Bright_TimePeriod}"
                                                        IsReadOnly="True" />
                                    <DataGridTextColumn Width="*"
                                                        Binding="{Binding BrightPercent,
                                                                          Converter={StaticResource BrightPercentAvailableConverter}}"
                                                        Header="{DynamicResource Lang_Bright_Bright}"
                                                        IsReadOnly="True" />
                                </DataGrid.Columns>
                                <DataGrid.ContextMenu>
                                    <ContextMenu Background="#FF4F4F4F" Foreground="White">
                                        <MenuItem Command="{Binding CmdAddTimingAdjustData}"
                                                  Header="{DynamicResource Lang_Bright_Add}"
                                                  ItemContainerStyle="{DynamicResource MenuItemStyleParent}" />
                                        <MenuItem Command="{Binding CmdEditTimingAdjustData}"
                                                  Header="{DynamicResource Lang_Bright_Edit}"
                                                  ItemContainerStyle="{DynamicResource MenuItemStyleParent}" />
                                        <MenuItem Command="{Binding CmdDeleteSelectedTimingAdjustData}"
                                                  Header="{DynamicResource Lang_Bright_Delete}"
                                                  ItemContainerStyle="{DynamicResource MenuItemStyleParent}" />
                                        <MenuItem Command="{Binding CmdClearTimingAdjustData}"
                                                  Header="{DynamicResource Lang_Bright_ClearList}"
                                                  ItemContainerStyle="{DynamicResource MenuItemStyleParent}" />
                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                            </DataGrid>
                            <Button x:Name="button_edit"
                                    Width="60"
                                    Height="26"
                                    Margin="98,0,0,8"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Bottom"
                                    Command="{Binding CmdEditTimingAdjustData,
                                                      Mode=OneWay}"
                                    Content="{DynamicResource Lang_Bright_Edit}"
                                    IsEnabled="{Binding SelectedAdjustData,
                                                        Converter={StaticResource BrightAdjustDataConvertEnabled},
                                                        Mode=TwoWay}" />
                            <Button x:Name="button_add"
                                    Grid.Row="0"
                                    Width="60"
                                    Height="26"
                                    Margin="22,0,0,8"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Bottom"
                                    Command="{Binding CmdAddTimingAdjustData}"
                                    Content="{DynamicResource Lang_Bright_Add}"
                                    RenderTransformOrigin="0.837,1" />
                            <Button x:Name="button_delete"
                                    Grid.Row="0"
                                    Width="60"
                                    Height="26"
                                    Margin="175,0,403,8"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Bottom"
                                    Command="{Binding CmdDeleteSelectedTimingAdjustData,
                                                      Mode=OneWay}"
                                    Content="{DynamicResource Lang_Bright_Delete}"
                                    IsEnabled="{Binding SelectedAdjustData,
                                                        Converter={StaticResource BrightAdjustDataConvertEnabled},
                                                        Mode=TwoWay}" />
                            <Button x:Name="Button_Clear"
                                    Grid.Row="0"
                                    Width="60"
                                    Height="26"
                                    Margin="250,0,0,8"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Bottom"
                                    Command="{Binding CmdClearTimingAdjustData,
                                                      Mode=OneWay}"
                                    Content="{DynamicResource Lang_Bright_ClearList}"
                                    RenderTransformOrigin="0.837,1" />
                            <Button x:Name="Button_Ok"
                                    Grid.Row="0"
                                    Width="60"
                                    Height="26"
                                    Margin="0,0,23,8"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    Command="{Binding CmdOK,
                                                      Mode=OneWay}"
                                    Content="{DynamicResource Lang_Global_OK}"
                                    RenderTransformOrigin="0.837,1" />
                            <Button x:Name="Button_SensorSetting"
                                    Grid.Row="0"
                                    Width="93"
                                    Height="26"
                                    Margin="0,0,209,8"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    Command="{Binding CmdPeripheralsSetting,
                                                      Mode=OneWay}"
                                    Content="{DynamicResource Lang_Bright_SernsorSetting}"
                                    RenderTransformOrigin="0.837,1" />

                        </Grid>
                        <!--<Grid x:Name="Grid_AutoAdjustMode" Height="Auto" Width="Auto" Margin="0" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=RadioButton_autoAdjust}"/>-->
                    </Grid>
                </Grid>
            </DataTemplate>
            <Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Padding" Value="4,4,4,4" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}" />
                <Setter Property="Background" Value="#F9F9F9" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid ClipToBounds="true"
                                  KeyboardNavigation.TabNavigation="Local"
                                  SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0" />
                                    <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                    <RowDefinition x:Name="RowDefinition1" Height="*" />
                                </Grid.RowDefinitions>
                                <TabPanel x:Name="HeaderPanel"
                                          Grid.Row="0"
                                          Grid.Column="0"
                                          Margin="2,2,2,0"
                                          Panel.ZIndex="1"
                                          IsItemsHost="true"
                                          KeyboardNavigation.TabIndex="1" />
                                <Border x:Name="ContentPanel"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        KeyboardNavigation.TabIndex="2"
                                        KeyboardNavigation.TabNavigation="Local">
                                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                                      Margin="{TemplateBinding Padding}"
                                                      ContentSource="SelectedContent"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      Style="{DynamicResource ContentPresenterStyle1}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TabStripPlacement" Value="Bottom">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                                    <Setter TargetName="HeaderPanel" Property="Margin" Value="2,0,2,2" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Left">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                                    <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Margin" Value="2,2,0,2" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Right">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                                    <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                                    <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Margin" Value="0,2,2,2" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ContentPresenterStyle1" TargetType="{x:Type ContentPresenter}" />
            <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
                <StackPanel IsItemsHost="True" />
            </ItemsPanelTemplate>
            <Style x:Key="ContextMenuStyle" TargetType="{x:Type ContextMenu}">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderThickness" Value="1" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#FF75ECF2" />
                                    <GradientStop Offset="1" Color="#FF19E0E7" />
                                    <GradientStop Offset="0.5" Color="#FF19E0E7" />
                                    <GradientStop Offset="0.495" Color="#FF75ECF2" />
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="true" />
                    <Trigger Property="ToggleButton.IsChecked" Value="true" />
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="#ADADAD" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="TabControlStyle2" TargetType="{x:Type TabControl}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Padding" Value="4,4,4,4" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}" />
                <Setter Property="Background" Value="#F9F9F9" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid ClipToBounds="true"
                                  KeyboardNavigation.TabNavigation="Local"
                                  SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0" />
                                    <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                    <RowDefinition x:Name="RowDefinition1" Height="*" />
                                </Grid.RowDefinitions>
                                <TabPanel x:Name="HeaderPanel"
                                          Grid.Row="0"
                                          Grid.Column="0"
                                          Margin="2,2,2,0"
                                          Panel.ZIndex="1"
                                          IsItemsHost="true"
                                          KeyboardNavigation.TabIndex="1" />
                                <Border x:Name="ContentPanel"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        KeyboardNavigation.TabIndex="2"
                                        KeyboardNavigation.TabNavigation="Local">
                                    <Grid Width="Auto"
                                          Height="Auto"
                                          Margin="0"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid x:Name="Grid_BrightAdjust"
                                              Grid.Row="0"
                                              Width="Auto"
                                              Height="Auto"
                                              Margin="0">
                                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                                              Width="Auto"
                                                              Height="Auto"
                                                              Margin="0"
                                                              VerticalAlignment="Bottom"
                                                              ContentSource="SelectedContent"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              Style="{DynamicResource ContentPresenterStyle1}" />
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TabStripPlacement" Value="Bottom">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                                    <Setter TargetName="HeaderPanel" Property="Margin" Value="2,0,2,2" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Left">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                                    <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Margin" Value="2,2,0,2" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Right">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                                    <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                                    <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Margin" Value="0,2,2,2" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F" />
            <Style x:Key="CheckRadioFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="14,0,0,0"
                                       SnapsToDevicePixels="true"
                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       StrokeDashArray="1 2"
                                       StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="RadioButtonStyle_Common" TargetType="{x:Type RadioButton}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Background" Value="#F4F4F4" />
                <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <BulletDecorator Background="Transparent">
                                <BulletDecorator.Bullet>
                                    <Microsoft_Windows_Themes:BulletChrome Background="{TemplateBinding Background}"
                                                                           BorderBrush="{TemplateBinding BorderBrush}"
                                                                           IsChecked="{TemplateBinding IsChecked}"
                                                                           IsRound="true"
                                                                           RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                                           RenderPressed="{TemplateBinding IsPressed}" />
                                </BulletDecorator.Bullet>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True" />
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}" />
                                    <Setter Property="Padding" Value="4,0,0,0" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate x:Key="DataTemplate1">
                <Grid Height="Auto" />
            </DataTemplate>
            <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Width" Value="8" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Cursor" Value="SizeWE" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGridColumnHeaderStyle_common" TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid>
                                <Microsoft_Windows_Themes:DataGridHeaderBorder Background="#FF373737"
                                                                               BorderBrush="#FF95F329"
                                                                               BorderThickness="{TemplateBinding BorderThickness}"
                                                                               IsClickable="{TemplateBinding CanUserSort}"
                                                                               IsHovered="{TemplateBinding IsMouseOver}"
                                                                               IsPressed="{TemplateBinding IsPressed}"
                                                                               Padding="{TemplateBinding Padding}"
                                                                               SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                                                               SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                                                               SortDirection="{TemplateBinding SortDirection}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Microsoft_Windows_Themes:DataGridHeaderBorder>
                                <Thumb x:Name="PART_LeftHeaderGripper"
                                       HorizontalAlignment="Left"
                                       Background="#00414245"
                                       Foreground="Gainsboro"
                                       Style="{StaticResource ColumnHeaderGripperStyle}" />
                                <Thumb x:Name="PART_RightHeaderGripper"
                                       HorizontalAlignment="Right"
                                       Background="#00414245"
                                       Foreground="Gainsboro"
                                       Style="{StaticResource ColumnHeaderGripperStyle}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGridRowStyle_common" TargetType="{x:Type DataGridRow}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                <Setter Property="ValidationErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Margin="2,0,0,0"
                                       VerticalAlignment="Center"
                                       Background="Gray"
                                       Foreground="White"
                                       Text="!" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border x:Name="DGR_Border"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="#FF4B4B4B"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Column="1"
                                                            HorizontalAlignment="Stretch"
                                                            ItemsPanel="{TemplateBinding ItemsPanel}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <DataGridDetailsPresenter Grid.Row="1"
                                                              Grid.Column="1"
                                                              SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen,
                                                                                                                             ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                                                                                                                             Converter={x:Static DataGrid.RowDetailsScrollingConverter},
                                                                                                                             RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                              Visibility="{TemplateBinding DetailsVisibility}" />
                                    <DataGridRowHeader Grid.RowSpan="2"
                                                       Foreground="Gainsboro"
                                                       SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                       Visibility="{Binding HeadersVisibility,
                                                                            ConverterParameter={x:Static DataGridHeadersVisibility.Row},
                                                                            Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />
            <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Height" Value="8" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Cursor" Value="SizeNS" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGridRowHeaderStyle_common" TargetType="{x:Type DataGridRowHeader}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                            <Grid Background="#FF414245">
                                <Microsoft_Windows_Themes:DataGridHeaderBorder Background="{TemplateBinding Background}"
                                                                               BorderBrush="#FF414245"
                                                                               BorderThickness="{TemplateBinding BorderThickness}"
                                                                               IsHovered="{TemplateBinding IsMouseOver}"
                                                                               IsPressed="{TemplateBinding IsPressed}"
                                                                               IsSelected="{TemplateBinding IsRowSelected}"
                                                                               Orientation="Horizontal"
                                                                               Padding="{TemplateBinding Padding}"
                                                                               SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                                                               SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                    <StackPanel Background="#FF414245" Orientation="Horizontal">
                                        <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <Control Foreground="Gainsboro"
                                                 SnapsToDevicePixels="false"
                                                 Template="{Binding ValidationErrorTemplate,
                                                                    RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                                 Visibility="{Binding (Validation.HasError),
                                                                      Converter={StaticResource bool2VisibilityConverter},
                                                                      RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
                                    </StackPanel>
                                </Microsoft_Windows_Themes:DataGridHeaderBorder>
                                <Thumb x:Name="PART_TopHeaderGripper"
                                       VerticalAlignment="Top"
                                       Background="#00414245"
                                       Style="{StaticResource RowHeaderGripperStyle}" />
                                <Thumb x:Name="PART_BottomHeaderGripper"
                                       VerticalAlignment="Bottom"
                                       Background="#00414245"
                                       Style="{StaticResource RowHeaderGripperStyle}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Sty_LangMenuItem" TargetType="{x:Type MenuItem}">
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="MenuItem.Command" Value="{Binding DataContext.CmdChangedLang, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Menu}}}" />
                <Setter Property="MenuItem.CommandParameter" Value="{Binding LangFlag}" />
                <Setter Property="MenuItem.IsChecked" Value="{Binding IsSelected}" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Padding" Value="7,2,8,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Padding" Value="7,2,8,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Padding" Value="2,3,2,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="Padding" Value="2,3,2,3" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="DT_LangItem">
                <Grid Width="Auto">
                    <TextBlock x:Name="myl"
                               Margin="0,0,1.333,0.163"
                               Text="{Binding LangDisplayName}"
                               TextWrapping="Wrap"
                               d:LayoutOverrides="Width, Height" />
                </Grid>
            </DataTemplate>
            <LinearGradientBrush x:Key="MenuItemSelectionFill" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0" Color="#34C5EBFF" />
                <GradientStop Offset="1" Color="#3481D8FF" />
            </LinearGradientBrush>
            <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
            <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                <Grid SnapsToDevicePixels="true">
                    <Rectangle x:Name="Bg"
                               Fill="{TemplateBinding Background}"
                               RadiusX="2"
                               RadiusY="2"
                               Stroke="{TemplateBinding BorderBrush}"
                               StrokeThickness="1" />
                    <Rectangle x:Name="InnerBorder"
                               Margin="1"
                               RadiusX="2"
                               RadiusY="2" />
                    <Grid x:Name="grid">
                        <Grid.Background>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="#FF818181" />
                                <GradientStop Offset="1" Color="#FF818181" />
                                <GradientStop Offset="0.005" Color="#FF818181" />
                                <GradientStop Offset="0.01" Color="#FF4F4F4F" />
                                <GradientStop Offset="0.995" Color="#FF818181" />
                                <GradientStop Offset="0.99" Color="#FF4F4F4F" />
                            </LinearGradientBrush>
                        </Grid.Background>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"
                                              MinWidth="24"
                                              SharedSizeGroup="MenuItemIconColumnGroup" />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="37" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                            <ColumnDefinition Width="17" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="Icon"
                                          Margin="1"
                                          VerticalAlignment="Center"
                                          ContentSource="Icon"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border x:Name="GlyphPanel"
                                Width="22"
                                Height="22"
                                Margin="1"
                                Background="#E6EFF4"
                                BorderBrush="{x:Null}"
                                BorderThickness="0"
                                CornerRadius="3"
                                Visibility="Hidden">
                            <Path x:Name="Glyph"
                                  Width="9"
                                  Height="11"
                                  Data="{StaticResource Checkmark}"
                                  Fill="#0C12A1"
                                  FlowDirection="LeftToRight" />
                        </Border>
                        <ContentPresenter Grid.Column="2"
                                          Margin="{TemplateBinding Padding}"
                                          ContentSource="Header"
                                          OpacityMask="Black"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <TextBlock x:Name="textBlock"
                                   Grid.Column="4"
                                   Margin="{TemplateBinding Padding}"
                                   Foreground="#FF9D9D9D"
                                   Text="{TemplateBinding InputGestureText}" />
                    </Grid>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Bg" Property="Fill" Value="{StaticResource MenuItemSelectionFill}" />
                        <Setter TargetName="Bg" Property="Stroke" Value="#8071CBF1" />
                        <Setter TargetName="InnerBorder" Property="Stroke" Value="#40FFFFFF" />
                        <Setter TargetName="grid" Property="Background" Value="#FF6E6E6E" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="#FF9D9D9D" />
                        <Setter TargetName="GlyphPanel" Property="Background" Value="#EEE9E9" />
                        <Setter TargetName="GlyphPanel" Property="BorderBrush" Value="#DBD6D6" />
                        <Setter TargetName="Glyph" Property="Fill" Value="#848589" />
                        <Setter TargetName="textBlock" Property="Foreground" Value="#FF9D9D9D" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <LinearGradientBrush x:Key="MenuItemPressedFill" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0" Color="#28717070" />
                <GradientStop Offset="0.75" Color="#50717070" />
                <GradientStop Offset="1" Color="#90717070" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="SubMenuBackgroundBrush" Color="#FFF5F5F5" />
            <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
            <Style x:Key="MenuScrollButton"
                   BasedOn="{x:Null}"
                   TargetType="{x:Type RepeatButton}">
                <Setter Property="ClickMode" Value="Hover" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="MinHeight" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <DockPanel Background="Transparent" SnapsToDevicePixels="true">
                                <Rectangle x:Name="R1"
                                           Width="1"
                                           DockPanel.Dock="Right"
                                           Fill="Transparent" />
                                <Rectangle x:Name="B1"
                                           Height="1"
                                           DockPanel.Dock="Bottom"
                                           Fill="Transparent" />
                                <Rectangle x:Name="L1"
                                           Width="1"
                                           DockPanel.Dock="Left"
                                           Fill="Transparent" />
                                <Rectangle x:Name="T1"
                                           Height="1"
                                           DockPanel.Dock="Top"
                                           Fill="Transparent" />
                                <ContentPresenter x:Name="ContentContainer"
                                                  Margin="2,2,2,2"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" />
                            </DockPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="R1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                    <Setter TargetName="B1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                    <Setter TargetName="L1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                                    <Setter TargetName="T1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                                    <Setter TargetName="ContentContainer" Property="Margin" Value="3,3,1,1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
            <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
            <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer,
                                                TypeInTargetAssembly={x:Type FrameworkElement}}"
                   BasedOn="{x:Null}"
                   TargetType="{x:Type ScrollViewer}">
                <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
                <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <RepeatButton Grid.Row="0"
                                              Grid.Column="0"
                                              Command="{x:Static ScrollBar.LineUpCommand}"
                                              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                              Focusable="false"
                                              Style="{StaticResource MenuScrollButton}">
                                    <RepeatButton.Visibility>
                                        <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                                      ConverterParameter="0"
                                                      FallbackValue="Visibility.Collapsed">
                                            <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </RepeatButton.Visibility>
                                    <Path Data="{StaticResource UpArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                                </RepeatButton>
                                <Border Grid.Row="1" Grid.Column="0">
                                    <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                                </Border>
                                <RepeatButton Grid.Row="2"
                                              Grid.Column="0"
                                              Command="{x:Static ScrollBar.LineDownCommand}"
                                              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                              Focusable="false"
                                              Style="{StaticResource MenuScrollButton}">
                                    <RepeatButton.Visibility>
                                        <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                                      ConverterParameter="100"
                                                      FallbackValue="Visibility.Collapsed">
                                            <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </RepeatButton.Visibility>
                                    <Path Data="{StaticResource DownArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                                </RepeatButton>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ContentControl}">
                <Border Background="{StaticResource SubMenuBackgroundBrush}"
                        BorderBrush="#FF959595"
                        BorderThickness="1">
                    <Grid>
                        <Rectangle Width="28"
                                   Margin="2"
                                   HorizontalAlignment="Left"
                                   Fill="#F1F1F1"
                                   RadiusX="2"
                                   RadiusY="2" />
                        <Rectangle Width="1"
                                   Margin="30,2,0,2"
                                   HorizontalAlignment="Left"
                                   Fill="#E2E3E3" />
                        <Rectangle Width="1"
                                   Margin="31,2,0,2"
                                   HorizontalAlignment="Left"
                                   Fill="White" />
                        <ContentPresenter Grid.ColumnSpan="2" Margin="1,0" />
                    </Grid>
                </Border>
            </ControlTemplate>

            <Style x:Key="MenuItemStyleParent" TargetType="{x:Type MenuItem}">
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Padding" Value="7,2,8,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Padding" Value="7,2,8,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Padding" Value="2,3,2,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="Padding" Value="2,3,2,3" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Padding" Value="7,2,8,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Padding" Value="7,2,8,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Padding" Value="2,3,2,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="Padding" Value="2,3,2,3" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="TabControlStyle_MainWinow_Environment" TargetType="{x:Type TabControl}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Padding" Value="4,4,4,4" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}" />
                <Setter Property="Background" Value="#F9F9F9" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid ClipToBounds="true"
                                  KeyboardNavigation.TabNavigation="Local"
                                  SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0" />
                                    <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                    <RowDefinition x:Name="RowDefinition1" Height="*" />
                                </Grid.RowDefinitions>
                                <Border x:Name="ContentPanel"
                                        Grid.Row="0"
                                        Grid.RowSpan="2"
                                        Grid.Column="0"
                                        Margin="0.8,3.3,0,0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        KeyboardNavigation.TabIndex="2"
                                        KeyboardNavigation.TabNavigation="Local">
                                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                                      Margin="{TemplateBinding Padding}"
                                                      ContentSource="SelectedContent"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                                <TabPanel x:Name="HeaderPanel"
                                          Grid.Row="1"
                                          Grid.Column="0"
                                          Width="23"
                                          Height="Auto"
                                          Margin="2,0,0,238.2"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Stretch"
                                          Panel.ZIndex="1"
                                          IsItemsHost="true"
                                          KeyboardNavigation.TabIndex="1" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TabStripPlacement" Value="Bottom">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                                    <Setter TargetName="HeaderPanel" Property="Margin" Value="2,0,2,2" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Left">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                                    <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Margin" Value="2,2,0,2" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Right">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                                    <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                                    <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Margin" Value="0,2,2,2" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MenuItemStyle_MenuItemSecond" TargetType="{x:Type MenuItem}">
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Padding" Value="7,2,8,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Padding" Value="7,2,8,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Padding" Value="2,3,2,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="Padding" Value="2,3,2,3" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="MenuItemStyle_MenuSencond" TargetType="{x:Type MenuItem}">
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Padding" Value="7,2,8,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Padding" Value="7,2,8,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Padding" Value="2,3,2,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="Padding" Value="2,3,2,3" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000" />
            <Style x:Key="DataGridCellStyle_common" TargetType="{x:Type DataGridCell}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#FFA0A0A0" />
                        <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
            			<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <!--<Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>-->
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Rectangle x:Name="Border"
                                           Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                           SnapsToDevicePixels="True" />
                                <Polygon x:Name="Arrow"
                                         Margin="8,8,3,3"
                                         HorizontalAlignment="Right"
                                         VerticalAlignment="Bottom"
                                         Fill="Black"
                                         Opacity="0.15"
                                         Points="0,10 10,10 10,0"
                                         Stretch="Uniform" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Stroke" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderBrush" Value="#FF688CAF" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGrid}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                    <ScrollViewer.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <Button Width="{Binding CellsPanelHorizontalOffset,
                                                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                        Command="{x:Static DataGrid.SelectAllCommand}"
                                                        Focusable="false"
                                                        Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                                                                      TypeInTargetAssembly={x:Type DataGrid}}}"
                                                        Visibility="{Binding HeadersVisibility,
                                                                             ConverterParameter={x:Static DataGridHeadersVisibility.All},
                                                                             Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                             RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                                Grid.Column="1"
                                                                                Visibility="{Binding HeadersVisibility,
                                                                                                     ConverterParameter={x:Static DataGridHeadersVisibility.Column},
                                                                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                                                     RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                        Grid.Row="1"
                                                                        Grid.ColumnSpan="2"
                                                                        CanContentScroll="{TemplateBinding CanContentScroll}" />
                                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                                           Grid.Row="1"
                                                           Grid.Column="2"
                                                           Maximum="{TemplateBinding ScrollableHeight}"
                                                           Orientation="Vertical"
                                                           ViewportSize="{TemplateBinding ViewportHeight}"
                                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                           Value="{Binding VerticalOffset,
                                                                           Mode=OneWay,
                                                                           RelativeSource={RelativeSource TemplatedParent}}" />
                                                <Grid Grid.Row="2" Grid.Column="1">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                               Grid.Column="1"
                                                               Maximum="{TemplateBinding ScrollableWidth}"
                                                               Orientation="Horizontal"
                                                               ViewportSize="{TemplateBinding ViewportWidth}"
                                                               Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                               Value="{Binding HorizontalOffset,
                                                                               Mode=OneWay,
                                                                               RelativeSource={RelativeSource TemplatedParent}}" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </ScrollViewer.Template>
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsGrouping" Value="true">
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>



    </Window.Resources>
    <Window.DataContext>
        <Binding Source="{StaticResource WinBrightAdjust_VMDataSource}" />
    </Window.DataContext>
    <Grid DataContext="{Binding Source={StaticResource WinBrightAdjust_VMDataSource}}">
        <Label HorizontalAlignment="Center"
               VerticalAlignment="Center"
               Content="No Screen !"
               FontSize="64"
               Foreground="Gainsboro" />

        <TabControl Background="#FF303435"
                    ContentTemplate="{DynamicResource DT_BrightScreenContainer}"
                    Foreground="Gainsboro"
                    ItemContainerStyle="{DynamicResource Style_BrightScreenTabItem}"
                    ItemTemplate="{DynamicResource DataTemplate1}"
                    ItemsPanel="{DynamicResource ItemsPanelTemplate1}"
                    ItemsSource="{Binding ScreenBrightCollection,
                                          Mode=TwoWay,
                                          UpdateSourceTrigger=PropertyChanged}"
                    Style="{DynamicResource TabControlStyle2}"
                    Visibility="{Binding IsNoScreen,
                                         Converter={StaticResource BoolReversalVisibilityConvertor}}" />

    </Grid>
</MetroUI:MetroWindow>
