<MetroUI:MetroWindow x:Class="SmartLCT.StartWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:MetroUI="clr-namespace:Nova.SmartLCT.UI.MetroUI;assembly=Nova.SmartLCT.UI.MetroUI"
                     xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                     xmlns:Nova_SmartLCT_Behavior="clr-namespace:Nova.SmartLCT.Behavior;assembly=Behavior"
                     xmlns:Nova_SmartLCT_UI="clr-namespace:Nova.SmartLCT.UI;assembly=Nova.SmartLCT.UI.PropertyPanel"
                     xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
                     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                     xmlns:local="clr-namespace:SmartLCT"
                     xmlns:localInterface="clr-namespace:Nova.SmartLCT.Interface;assembly=Nova.SmartLCT.Interface.CommonData"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     Title="{DynamicResource Lang_StartWindow_Start}"
                     Width="965"
                     Height="651"
                     AllowsTransparency="True"
                     Background="#FF2D3132"
                     Closed="Window_Closed"
                     Foreground="#FFB6B2B2"
                     IsTitleVisible="True"
                     ResizeMode="CanMinimize"
                     WindowStyle="None"
                     mc:Ignorable="d">
    <MetroUI:MetroWindow.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter1" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:StartWindow_VM x:Key="StartWindow_VMDataSource" d:IsDataSource="True" />

        <ControlTemplate x:Key="ScrollViewerControlTemplate_Center" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Margin="{TemplateBinding Padding}"
                                        CanContentScroll="{TemplateBinding CanContentScroll}"
                                        CanHorizontallyScroll="False"
                                        CanVerticallyScroll="False"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}" />
                <ScrollBar x:Name="PART_VerticalScrollBar"
                           Grid.Row="0"
                           Grid.Column="1"
                           AutomationProperties.AutomationId="VerticalScrollBar"
                           Cursor="Arrow"
                           Maximum="{TemplateBinding ScrollableHeight}"
                           Minimum="0"
                           ViewportSize="{TemplateBinding ViewportHeight}"
                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                           Value="{Binding VerticalOffset,
                                           Mode=OneWay,
                                           RelativeSource={RelativeSource TemplatedParent}}" />
                <ScrollBar x:Name="PART_HorizontalScrollBar"
                           Grid.Row="1"
                           Grid.Column="0"
                           AutomationProperties.AutomationId="HorizontalScrollBar"
                           Cursor="Arrow"
                           Maximum="{TemplateBinding ScrollableWidth}"
                           Minimum="0"
                           Orientation="Horizontal"
                           ViewportSize="{TemplateBinding ViewportWidth}"
                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                           Value="{Binding HorizontalOffset,
                                           Mode=OneWay,
                                           RelativeSource={RelativeSource TemplatedParent}}" />
                <Rectangle x:Name="Corner"
                           Grid.Row="1"
                           Grid.Column="1"
                           Fill="#FF303435" />
            </Grid>
        </ControlTemplate>
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome"
                                                               Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"
                                                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                               RenderPressed="{TemplateBinding IsPressed}"
                                                               SnapsToDevicePixels="true" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Width="{TemplateBinding Width}"
                                   Height="{TemplateBinding Height}"
                                   Fill="{TemplateBinding Background}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border BorderBrush="#FF6F7374" BorderThickness="0,1,0,0">
                            <Border Background="{DynamicResource MyScrollTruckBackground}"
                                    BorderBrush="#FF202123"
                                    BorderThickness="0,0,0,1" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbv" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border BorderBrush="#FF4A4B4D" BorderThickness="1,0,0,0">
                            <Border Background="{DynamicResource MyScrollTruckBackgroundv}"
                                    BorderBrush="#FF202123"
                                    BorderThickness="0,0,1,0" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="HorizontalScrollBarBackground" StartPoint="0,0.5" EndPoint="1,0.5">
            <GradientStop Offset="1" Color="Black" />
            <GradientStop Color="#FF2C2D31" />
            <GradientStop Offset="0.083" Color="#FF3E4042" />
            <GradientStop Offset="0.923" Color="#FF303435" />
            <GradientStop Offset="0.104" Color="#FF303435" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="MyScrollTruckBackground" StartPoint="0,0.5" EndPoint="1,0.5">
            <GradientStop Offset="1" Color="Black" />
            <GradientStop Color="#FF545454" />
            <GradientStop Offset="0.08" Color="#FF4D4E4E" />
            <GradientStop Offset="0.98" Color="#FF303435" />
            <GradientStop Offset="0.075" Color="#FF303435" />
            <GradientStop Color="#FF4A4C4D" />

        </LinearGradientBrush>
        <LinearGradientBrush x:Key="MyScrollTruckBackgroundv" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Offset="1" Color="Black" />
            <GradientStop Color="#FF545454" />
            <GradientStop Offset="0.08" Color="#FF4D4E4E" />
            <GradientStop Offset="0.98" Color="#FF303435" />
            <GradientStop Offset="0.075" Color="#FF303435" />
            <GradientStop Color="#FF4A4C4D" />
        </LinearGradientBrush>
        <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Width="{TemplateBinding Width}"
                                   Height="{TemplateBinding Height}"
                                   Fill="{TemplateBinding Background}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                   SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle_ScrollBarLineUp" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource SButtonFocusVisual}" />
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="Black"
                                BorderThickness="0,1">
                            <ed:RegularPolygon Width="8"
                                               Height="6"
                                               Margin="5,0,0,0"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Fill="Black"
                                               InnerRadius="1"
                                               PointCount="3"
                                               RenderTransformOrigin="0.5,0.5"
                                               Stretch="Fill">
                                <ed:RegularPolygon.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </ed:RegularPolygon.RenderTransform>
                            </ed:RegularPolygon>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true" />
                            <Trigger Property="ToggleButton.IsChecked" Value="true" />
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle_ScrollBarLineLeft" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource SButtonFocusVisual}" />
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="Black"
                                BorderThickness="0,1">
                            <ed:RegularPolygon Width="8"
                                               Height="6"
                                               Margin="5,0,0,0"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Fill="Black"
                                               InnerRadius="1"
                                               PointCount="3"
                                               RenderTransformOrigin="0.5,0.5"
                                               Stretch="Fill">
                                <ed:RegularPolygon.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </ed:RegularPolygon.RenderTransform>
                            </ed:RegularPolygon>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true" />
                            <Trigger Property="ToggleButton.IsChecked" Value="true" />
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle_ScrollBarLineRight" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource SButtonFocusVisual}" />
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="Black"
                                BorderThickness="0,1">
                            <ed:RegularPolygon Width="8"
                                               Height="6"
                                               Margin="5,0,0,0"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Fill="Black"
                                               InnerRadius="1"
                                               PointCount="3"
                                               RenderTransformOrigin="0.5,0.5"
                                               Stretch="Fill">
                                <ed:RegularPolygon.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </ed:RegularPolygon.RenderTransform>
                            </ed:RegularPolygon>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true" />
                            <Trigger Property="ToggleButton.IsChecked" Value="true" />
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="#FF303435" />
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg"
                              Background="{TemplateBinding Background}"
                              SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            </Grid.RowDefinitions>
                            <Button Background="#FF303435"
                                    BorderBrush="{x:Null}"
                                    BorderThickness="0.5"
                                    Command="{x:Static ScrollBar.LineUpCommand}"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"
                                    Style="{DynamicResource ButtonStyle_ScrollBarLineUp}" />
                            <Track x:Name="PART_Track"
                                   Grid.Row="1"
                                   IsDirectionReversed="true"
                                   IsEnabled="{TemplateBinding IsMouseOver}">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper" Style="{StaticResource ScrollBarThumb}" />
                                </Track.Thumb>
                            </Track>
                            <Button x:Name="repeatButton"
                                    Grid.Row="2"
                                    Margin="0,0,0,-1"
                                    Background="#FF303435"
                                    BorderBrush="{x:Null}"
                                    BorderThickness="0.5"
                                    Command="{x:Static ScrollBar.LineDownCommand}"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"
                                    Style="{DynamicResource ButtonStyle_ScrollBarLineDown}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Bg" Property="Background" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="MinWidth" Value="0" />
                    <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg"
                                      Background="{TemplateBinding Background}"
                                      SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                        <ColumnDefinition Width="0.00001*" />
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    </Grid.ColumnDefinitions>
                                    <Button Background="#FF303435"
                                            BorderBrush="{x:Null}"
                                            BorderThickness="0.5"
                                            Command="{x:Static ScrollBar.LineLeftCommand}"
                                            IsEnabled="{TemplateBinding IsMouseOver}"
                                            Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"
                                            Style="{DynamicResource ButtonStyle_ScrollBarLineLeft}" />
                                    <Track x:Name="PART_Track"
                                           Grid.Column="1"
                                           IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper" Style="{StaticResource ScrollBarThumbv}" />
                                        </Track.Thumb>
                                    </Track>
                                    <Button Grid.Column="2"
                                            Background="#FF303435"
                                            BorderBrush="{x:Null}"
                                            BorderThickness="0.5"
                                            Command="{x:Static ScrollBar.LineRightCommand}"
                                            IsEnabled="{TemplateBinding IsMouseOver}"
                                            Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"
                                            Style="{DynamicResource ButtonStyle_ScrollBarLineRight}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter TargetName="Bg" Property="Background" Value="gray" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle_ScrollBarLineDown" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource SButtonFocusVisual}" />
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="Black"
                                BorderThickness="0,0.5">
                            <ed:RegularPolygon Width="8"
                                               Height="6"
                                               Margin="5,0,0,0"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Fill="Black"
                                               InnerRadius="1"
                                               PointCount="3"
                                               RenderTransformOrigin="0.5,0.5"
                                               Stretch="Fill">
                                <ed:RegularPolygon.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </ed:RegularPolygon.RenderTransform>
                            </ed:RegularPolygon>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true" />
                            <Trigger Property="ToggleButton.IsChecked" Value="true" />
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <DataTemplate x:Key="DataTemplate_ProductInfoList">
            <Grid Width="Auto" Height="71.837">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>
            </Grid>
        </DataTemplate>
        <Style x:Key="ListBoxItemStyle_productInfoList" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="2,0,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="false" />
                                    <Condition Property="IsMouseOver" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="#FF414141" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="IsMouseOver" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="Black" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="DataTemplate_productInfoListBox">
            <Border x:Name="border"
                    Width="{Binding Width,
                                    Mode=TwoWay}"
                    Height="{Binding Height,
                                     Mode=TwoWay}"
                    Margin="12,0,2,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="#FF2D3132"
                    BorderBrush="#FF3D3D3D"
                    BorderThickness="1"
                    CornerRadius="3">
                <Grid RenderTransformOrigin="0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Rectangle x:Name="rectangle"
                               Width="0.5"
                               Margin="0,0,-0.25,0"
                               HorizontalAlignment="Right"
                               Stroke="{x:Null}">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="#FF393C3D" />
                                <GradientStop Offset="1" Color="#FF393C3D" />
                                <GradientStop Offset="0.5" Color="#FF5B5C5C" />
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Image Grid.Column="0"
                           Width="Auto"
                           Height="Auto"
                           Margin="0"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Source="{Binding PicPath,
                                            Mode=TwoWay}" />
                    <Label x:Name="label"
                           Grid.Row="1"
                           Grid.Column="1"
                           Width="Auto"
                           Height="Auto"
                           MaxWidth="200"
                           Margin="5,0"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Content="{Binding Description,
                                             Mode=TwoWay}"
                           FontSize="10.667"
                           FontWeight="Bold"
                           Foreground="Gray"
                           ScrollViewer.CanContentScroll="False"
                           ScrollViewer.VerticalScrollBarVisibility="Auto"
                           Visibility="Visible" />
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="border" Property="Background" Value="#FF595959" />
                    <Setter TargetName="rectangle" Property="Fill">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="#FF5B5C5C" />
                                <GradientStop Offset="1" Color="#FF5B5C5C" />
                                <GradientStop Offset="0.5" Color="#FF303435" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="ContentControl.Content" Value="{x:Null}" />
                <EventTrigger RoutedEvent="FrameworkElement.Loaded" />
            </DataTemplate.Triggers>
        </DataTemplate>
        <Style x:Key="ListBoxItemStyle_productInfoListBox" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="2,0,0,0" />
        </Style>
        <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="-90" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle"
                                             Width="19"
                                             Height="19"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Stroke="DarkGray" />
                                    <Path x:Name="arrow"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                          SnapsToDevicePixels="false"
                                          Stroke="#666"
                                          StrokeThickness="2" />
                                </Grid>
                                <ContentPresenter Grid.Row="1"
                                                  Margin="0,4,0,0"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Top"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF3C7FB1" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF526C7B" />
                                <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#FF003366" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="180" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle"
                                             Width="19"
                                             Height="19"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Stroke="DarkGray" />
                                    <Path x:Name="arrow"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                          SnapsToDevicePixels="false"
                                          Stroke="#666"
                                          StrokeThickness="2" />
                                </Grid>
                                <ContentPresenter Grid.Column="1"
                                                  Margin="4,0,0,0"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF3C7FB1" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF526C7B" />
                                <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#FF003366" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="90" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle"
                                             Width="19"
                                             Height="19"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Stroke="DarkGray" />
                                    <Path x:Name="arrow"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                          SnapsToDevicePixels="false"
                                          Stroke="#666"
                                          StrokeThickness="2" />
                                </Grid>
                                <ContentPresenter Grid.Row="1"
                                                  Margin="0,4,0,0"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Top"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF3C7FB1" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF526C7B" />
                                <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#FF003366" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0"
                                       SnapsToDevicePixels="true"
                                       Stroke="Black"
                                       StrokeDashArray="1 2"
                                       StrokeThickness="1" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="myOpenBorder"
                                Height="Auto"
                                BorderBrush="{x:Null}"
                                Cursor="Hand"
                                Padding="{TemplateBinding Padding}">
                            <Grid Margin="0"
                                  Background="Transparent"
                                  SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="56.5" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Button x:Name="button"
                                        Width="25"
                                        Height="25"
                                        Margin="10,3,0,3"
                                        HorizontalAlignment="Left"
                                        Command="{Binding CmdNewWizard,
                                                          Mode=OneWay}"
                                        IsTabStop="False"
                                        Style="{DynamicResource CommonButtonStyle}">
                                    <Button.Background>
                                        <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/Wizard.png" />
                                    </Button.Background>
                                </Button>
                                <TextBlock x:Name="textBlock"
                                           Grid.Column="1"
                                           Margin="0"
                                           VerticalAlignment="Center"
                                           FontSize="16"
                                           Foreground="#FF818181"
                                           Text="{TemplateBinding Content}"
                                           TextWrapping="Wrap"
                                           d:LayoutOverrides="Width, Height" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="myOpenBorder" Property="Background" Value="#FF373B3C" />
                                <Setter TargetName="textBlock" Property="Foreground" Value="Gainsboro" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle_openproject" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="myNewBorder"
                                Height="Auto"
                                Background="#FF2D3132"
                                BorderBrush="{x:Null}"
                                BorderThickness="1"
                                Cursor="Hand"
                                Padding="{TemplateBinding Padding}">
                            <Grid Height="Auto"
                                  Background="Transparent"
                                  SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="54.5" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Button x:Name="button"
                                        Width="28"
                                        Height="28"
                                        Margin="10.5,3,0,3"
                                        HorizontalAlignment="Left"
                                        Command="{Binding CmdOpenProject,
                                                          Mode=OneWay}"
                                        IsTabStop="False"
                                        Style="{DynamicResource CommonButtonStyle}">
                                    <Button.Background>
                                        <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/Open.png" />
                                    </Button.Background>
                                </Button>
                                <TextBlock x:Name="textBlock"
                                           Grid.Column="1"
                                           Margin="0"
                                           VerticalAlignment="Center"
                                           FontSize="16"
                                           Foreground="#FF818181"
                                           Text="{TemplateBinding Content}"
                                           TextWrapping="Wrap"
                                           d:LayoutOverrides="Width, Height" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="myNewBorder" Property="Background" Value="#FF373B3C" />
                                <Setter TargetName="textBlock" Property="Foreground" Value="Gainsboro" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle_newEmptyProject" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="myNewBorder"
                                Height="Auto"
                                Background="#FF2D3132"
                                BorderBrush="{x:Null}"
                                BorderThickness="1"
                                Cursor="Hand"
                                Padding="{TemplateBinding Padding}">
                            <Grid Height="Auto"
                                  Background="Transparent"
                                  SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="54.5" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Button x:Name="button"
                                        Width="28"
                                        Height="28"
                                        Margin="5,3,0,3"
                                        HorizontalAlignment="Left"
                                        Command="{Binding CmdNewEmptyProject,
                                                          Mode=OneWay}"
                                        IsTabStop="False"
                                        Style="{DynamicResource CommonButtonStyle}">
                                    <Button.Background>
                                        <ImageBrush ImageSource="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/New.png" />
                                    </Button.Background>
                                </Button>
                                <TextBlock x:Name="textBlock"
                                           Grid.Column="1"
                                           Margin="0"
                                           VerticalAlignment="Center"
                                           FontSize="16"
                                           Foreground="#FF818181"
                                           Text="{TemplateBinding Content}"
                                           TextWrapping="Wrap"
                                           d:LayoutOverrides="Width, Height" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="myNewBorder" Property="Background" Value="#FF373B3C" />
                                <Setter TargetName="textBlock" Property="Foreground" Value="Gainsboro" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderStyle_startWindowselect" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border Height="Auto"
                                Margin="0,0,0,0.834"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3"
                                SnapsToDevicePixels="true">
                            <DockPanel Height="Auto"
                                       Margin="0"
                                       d:LayoutOverrides="VerticalAlignment">
                                <ToggleButton x:Name="HeaderSite"
                                              Height="Auto"
                                              MinWidth="0"
                                              MinHeight="0"
                                              Margin="1"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                              DockPanel.Dock="Top"
                                              FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                              FontFamily="{TemplateBinding FontFamily}"
                                              FontSize="{TemplateBinding FontSize}"
                                              FontStretch="{TemplateBinding FontStretch}"
                                              FontStyle="{TemplateBinding FontStyle}"
                                              FontWeight="{TemplateBinding FontWeight}"
                                              Foreground="{TemplateBinding Foreground}"
                                              IsChecked="{Binding IsExpanded,
                                                                  Mode=TwoWay,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                              Padding="{TemplateBinding Padding}"
                                              Style="{StaticResource ExpanderDownHeaderStyle}" />
                                <ContentPresenter x:Name="ExpandSite"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  DockPanel.Dock="Bottom"
                                                  Focusable="false"
                                                  Visibility="Collapsed" />
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                                <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                                <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                                <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                                <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                                <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                                <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CommonButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="Black"
                                BorderThickness="0" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true" />
                            <Trigger Property="IsKeyboardFocused" Value="true" />
                            <Trigger Property="IsPressed" Value="true" />
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle2" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Stroke="DarkGray" />
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                      SnapsToDevicePixels="false"
                                      Stroke="#666"
                                      StrokeThickness="2" />
                                <ContentPresenter Grid.Column="1"
                                                  Margin="4,0,0,0"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF3C7FB1" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF526C7B" />
                                <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#FF003366" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderStyle_startWindowOpenProject" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border Height="Auto"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3"
                                SnapsToDevicePixels="true">
                            <DockPanel Height="Auto">
                                <ToggleButton x:Name="HeaderSite"
                                              Height="Auto"
                                              MinWidth="0"
                                              MinHeight="0"
                                              Margin="1"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                              DockPanel.Dock="Top"
                                              FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                              FontFamily="{TemplateBinding FontFamily}"
                                              FontSize="{TemplateBinding FontSize}"
                                              FontStretch="{TemplateBinding FontStretch}"
                                              FontStyle="{TemplateBinding FontStyle}"
                                              FontWeight="{TemplateBinding FontWeight}"
                                              Foreground="{TemplateBinding Foreground}"
                                              IsChecked="{Binding IsExpanded,
                                                                  Mode=TwoWay,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                              Padding="{TemplateBinding Padding}"
                                              Style="{StaticResource ExpanderDownHeaderStyle_openproject}" />
                                <ContentPresenter x:Name="ExpandSite"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  DockPanel.Dock="Bottom"
                                                  Focusable="false"
                                                  Visibility="Collapsed" />
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                                <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                                <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                                <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                                <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                                <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                                <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderStyle_startWindowNewEmptyProjectt" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border Height="Auto"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3"
                                SnapsToDevicePixels="true">
                            <DockPanel Height="Auto">
                                <ToggleButton x:Name="HeaderSite"
                                              Height="Auto"
                                              MinWidth="0"
                                              MinHeight="0"
                                              Margin="1"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                              DockPanel.Dock="Top"
                                              FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                              FontFamily="{TemplateBinding FontFamily}"
                                              FontSize="{TemplateBinding FontSize}"
                                              FontStretch="{TemplateBinding FontStretch}"
                                              FontStyle="{TemplateBinding FontStyle}"
                                              FontWeight="{TemplateBinding FontWeight}"
                                              Foreground="{TemplateBinding Foreground}"
                                              IsChecked="{Binding IsExpanded,
                                                                  Mode=TwoWay,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                              Padding="{TemplateBinding Padding}"
                                              Style="{StaticResource ExpanderDownHeaderStyle_newEmptyProject}" />
                                <ContentPresenter x:Name="ExpandSite"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  DockPanel.Dock="Bottom"
                                                  Focusable="false"
                                                  Visibility="Collapsed" />
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                                <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                                <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                                <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                                <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                                <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                                <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="DataTemplate_RecentProjectListBox">
            <Grid x:Name="grid"
                  Width="230.457"
                  Height="Auto">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <cmd:EventToCommand Command="{Binding DataContext.CmdOpenRecentProject, RelativeSource={RelativeSource AncestorType={x:Type ListBox}, Mode=FindAncestor}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.204*" />
                    <ColumnDefinition Width="0*" />
                    <ColumnDefinition Width="0.796*" />
                </Grid.ColumnDefinitions>
                <Grid.ToolTip>
                    <ToolTip Content="{Binding ProjectPath, Mode=TwoWay}" />
                </Grid.ToolTip>
                <Image Width="18"
                       Height="18"
                       Margin="5,8.5,0,8.5"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Stretch"
                       Source="/Nova.SmartLCT.Skin;component/Image/BlueMode/Normal/SmartLCTProjectPic.png" />
                <Label x:Name="label"
                       Grid.Column="1"
                       Grid.ColumnSpan="2"
                       VerticalAlignment="Stretch"
                       Background="{x:Null}"
                       Content="{Binding ProjectName,
                                         Mode=TwoWay}"
                       FontSize="13.333"
                       Foreground="#FF818181"
                       d:LayoutOverrides="Width, GridBox" />
            </Grid>
            <DataTemplate.Triggers>
                <Trigger SourceName="grid" Property="IsMouseOver" Value="True">
                    <Setter TargetName="label" Property="Foreground" Value="Gainsboro" />
                    <Setter TargetName="label" Property="FontSize" Value="13.333" />
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <Style x:Key="ListBoxItemStyle_startwindow_Recentproject" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="2,0,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd"
                                Background="#FF2D3132"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="#FF373B3C" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="#FFAEAEAF" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <!--	<Trigger Property="IsSelected" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="#FF373B3C"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
								<Setter Property="Foreground" Value="White"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="#FF373B3C"/>
								<Setter Property="Foreground" Value="White"/>
							</MultiTrigger>-->
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ListBorder" Color="#828790" />
        <Style x:Key="ListBoxStyle_StartWindow_RecentOpen" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd"
                                Background="#FF2D3132"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="1"
                                SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Custom_Tabtitle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border Width="80"
                                    Margin="0,10,0,0"
                                    HorizontalAlignment="Left"
                                    BorderThickness="1"
                                    d:LayoutOverrides="HorizontalAlignment">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#FF64676C" />
                                        <GradientStop Offset="1" Color="#FF595959" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border Width="70"
                                    Height="30"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    BorderThickness="1"
                                    CornerRadius="5"
                                    RenderTransformOrigin="0.5,0.5"
                                    d:LayoutOverrides="HorizontalAlignment">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#FF64676C" />
                                        <GradientStop Offset="1" Color="#FF595959" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border Width="83"
                                    Height="30"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    BorderThickness="1"
                                    CornerRadius="5"
                                    d:LayoutOverrides="HorizontalAlignment">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#FF64676C" />
                                        <GradientStop Offset="1" Color="#FF595959" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform AngleX="45" />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Border.LayoutTransform>
                            </Border>
                            <Canvas Height="3"
                                    Margin="2,0,0,0"
                                    VerticalAlignment="Bottom"
                                    Background="#FF595959" />
                            <ContentPresenter Width="64"
                                              Margin="12,3.883,0,5"
                                              HorizontalAlignment="Left"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              d:LayoutOverrides="Height" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True" />
                            <Trigger Property="IsDefaulted" Value="True" />
                            <Trigger Property="IsMouseOver" Value="True" />
                            <Trigger Property="IsPressed" Value="True" />
                            <Trigger Property="IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="#FFC8C8C8" />
        </Style>
        <Style x:Key="ButtonStyle_RecentFile" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border Width="80"
                                    Margin="0,10,0,0"
                                    HorizontalAlignment="Left"
                                    BorderThickness="1"
                                    d:LayoutOverrides="HorizontalAlignment">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#FF64676C" />
                                        <GradientStop Offset="1" Color="#FF595959" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border Width="70"
                                    Height="30"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    BorderThickness="1"
                                    CornerRadius="5"
                                    RenderTransformOrigin="0.5,0.5"
                                    d:LayoutOverrides="HorizontalAlignment">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#FF64676C" />
                                        <GradientStop Offset="1" Color="#FF595959" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border Width="103"
                                    Height="30"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    BorderThickness="1"
                                    CornerRadius="5"
                                    d:LayoutOverrides="HorizontalAlignment">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#FF64676C" />
                                        <GradientStop Offset="1" Color="#FF595959" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform AngleX="45" />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Border.LayoutTransform>
                            </Border>
                            <Canvas Height="3"
                                    Margin="2,0,0,0"
                                    VerticalAlignment="Bottom"
                                    Background="#FF595959" />
                            <ContentPresenter Width="Auto"
                                              Margin="12,3.883,0,5"
                                              HorizontalAlignment="Left"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              d:LayoutOverrides="Height" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True" />
                            <Trigger Property="IsDefaulted" Value="True" />
                            <Trigger Property="IsMouseOver" Value="True" />
                            <Trigger Property="IsPressed" Value="True" />
                            <Trigger Property="IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="#FFC8C8C8" />
        </Style>
        <Style x:Key="ListBoxStyle_startWindow" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="1"
                                SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false"
                                          Padding="{TemplateBinding Padding}"
                                          Template="{DynamicResource ScrollViewerControlTemplate_Center}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="Selector.IsSelected" Value="True">
                                <Setter Property="Background" Value="Green" />
                            </Trigger>

                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate_startWindow_Product">
            <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" />
        </ItemsPanelTemplate>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                   SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#F3F3F3" />
            <GradientStop Offset="0.5" Color="#EBEBEB" />
            <GradientStop Offset="0.5" Color="#DDDDDD" />
            <GradientStop Offset="1" Color="#CDCDCD" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070" />
        <Style x:Key="ButtonStyle_forward" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome"
                                                               VerticalAlignment="Stretch"
                                                               Background="{TemplateBinding Background}"
                                                               BorderBrush="{TemplateBinding BorderBrush}"
                                                               RenderDefaulted="{TemplateBinding IsDefaulted}"
                                                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                               RenderPressed="{TemplateBinding IsPressed}"
                                                               SnapsToDevicePixels="true">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Microsoft_Windows_Themes:ButtonChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter TargetName="Chrome" Property="RenderDefaulted" Value="true" />
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="Chrome" Property="RenderPressed" Value="true" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="2,0,0,0" />
        </Style>
        <Style x:Key="ListBoxItemStyle2" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="2,0,0,0" />
        </Style>
        <Style x:Key="ListBoxItemStyle3" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="2,0,0,0" />
            <Setter Property="Margin" Value="0" />
        </Style>
        <Style x:Key="ListBoxItemStyle22" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="2,0,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                <Setter TargetName="Bd" Property="Background" Value="{x:Null}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                <Setter TargetName="Bd" Property="Background" Value="{x:Null}" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleLeft" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="12">
                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="26.667"
                                       Text="{TemplateBinding Content}"
                                       TextWrapping="Wrap" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true" />
                            <Trigger Property="ToggleButton.IsChecked" Value="true" />
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleRight" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="12">
                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="26.667"
                                       Foreground="{TemplateBinding Foreground}"
                                       Text="{TemplateBinding Content}"
                                       TextWrapping="Wrap" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true" />
                            <Trigger Property="ToggleButton.IsChecked" Value="true" />
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </MetroUI:MetroWindow.Resources>
    <Grid DataContext="{Binding Source={StaticResource StartWindow_VMDataSource}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="110" />
            <RowDefinition />
            <RowDefinition Height="175" />
        </Grid.RowDefinitions>
        <Border BorderBrush="Black">
            <Image Source="{Binding NovaStarPicPath, Mode=TwoWay}" Stretch="Fill" />

        </Border>
        <Grid Grid.Row="1" Margin="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="478" />
            </Grid.ColumnDefinitions>
            <Border BorderThickness="0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="137*" />
                        <RowDefinition Height="46*" />
                    </Grid.RowDefinitions>
                    <Expander Height="35.834"
                              Margin="55.5,93,69,0"
                              VerticalAlignment="Top"
                              Foreground="#FFF8F8F8"
                              Header="{DynamicResource Lang_StartWindow_NewWizard}"
                              IsExpanded="{Binding IsNewProject}"
                              IsTabStop="True"
                              Style="{DynamicResource ExpanderStyle_startWindowselect}"
                              TabIndex="1" />
                    <Expander Height="40"
                              Margin="56.5,133,69,0"
                              VerticalAlignment="Top"
                              Foreground="White"
                              Header="{DynamicResource Lang_StartWindow_Open}"
                              IsExpanded="{Binding IsOpenProject}"
                              IsTabStop="True"
                              Style="{DynamicResource ExpanderStyle_startWindowOpenProject}"
                              TabIndex="2" />
                    <Expander Height="40"
                              Margin="56.5,53,69,0"
                              VerticalAlignment="Top"
                              Foreground="#FFF8F8F8"
                              Header="{DynamicResource Lang_StartWindow_NewEmptyProject}"
                              IsExpanded="{Binding IsNewEmptyProject}"
                              IsTabStop="True"
                              Style="{DynamicResource ExpanderStyle_startWindowNewEmptyProjectt}"
                              TabIndex="0" />
                    <Expander Height="40"
                              Margin="56.5,173,69,0"
                              VerticalAlignment="Top"
                              Foreground="White"
                              Header="{DynamicResource Lang_SmartLCT_BrightAdjust}"
                              IsExpanded="{Binding IsOpenBrightAdjust}"
                              IsTabStop="True"
                              Style="{DynamicResource ExpanderStyle_startWindowOpenProject}"
                              TabIndex="2" />
                    <Expander Height="40"
                              Margin="56.5,213,69,0"
                              VerticalAlignment="Top"
                              Foreground="White"
                              Header="{DynamicResource Lang_SmartLCT_Language}"
                              IsExpanded="{Binding IsOpenLangSel}"
                              IsTabStop="True"
                              Style="{DynamicResource ExpanderStyle_startWindowOpenProject}"
                              TabIndex="2" />
                    <Border Height="33"
                            Margin="52,0,62,0"
                            VerticalAlignment="Top"
                            BorderBrush="#FF414142"
                            BorderThickness="1">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="#FF3B3F40" />
                                <GradientStop Offset="1" Color="#FF373B3C" />
                                <GradientStop Offset="0.5" Color="#FF3B3F40" />
                                <GradientStop Offset="0.5" Color="#FF373B3C" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <TextBlock Margin="8,0,0,0"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   FontSize="18.667"
                                   Foreground="#FFB6B2B2"
                                   Text="{DynamicResource Lang_StartWindow_Normal}"
                                   TextWrapping="Wrap" />
                    </Border>
                    <Rectangle Grid.RowSpan="2"
                               Width="0.5"
                               Margin="0,0,-1,0"
                               HorizontalAlignment="Right">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="#FF393C3D" />
                                <GradientStop Offset="1" Color="#FF393C3D" />
                                <GradientStop Offset="0.5" Color="#FF5B5C5C" />
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </Grid>
            </Border>
            <Grid Grid.Column="1">
                <ListBox Margin="53.788,55.5,103.853,110.67"
                         Background="#FF2D3132"
                         BorderBrush="Transparent"
                         FontSize="16"
                         ItemContainerStyle="{DynamicResource ListBoxItemStyle_startwindow_Recentproject}"
                         ItemTemplate="{DynamicResource DataTemplate_RecentProjectListBox}"
                         ItemsSource="{Binding RecentProjectCollection,
                                               Mode=TwoWay}"
                         RenderTransformOrigin="0.5,0.5"
                         SelectedValue="{Binding SelectedRecentProjectFile,
                                                 Mode=TwoWay}"
                         Style="{DynamicResource ListBoxStyle_StartWindow_RecentOpen}"
                         TabIndex="3"
                         d:LayoutOverrides="VerticalAlignment">
                    <ListBox.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform AngleX="-0.331" />
                            <RotateTransform />
                            <TranslateTransform X="-0.494" />
                        </TransformGroup>
                    </ListBox.RenderTransform>
                </ListBox>
                <Border Height="33"
                        Margin="45,0,82.5,0"
                        VerticalAlignment="Top"
                        BorderBrush="#FF414142"
                        BorderThickness="1">
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Offset="0" Color="#FF3B3F40" />
                            <GradientStop Offset="1" Color="#FF373B3C" />
                            <GradientStop Offset="0.5" Color="#FF3B3F40" />
                            <GradientStop Offset="0.5" Color="#FF373B3C" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <TextBlock Margin="8,0,0,0"
                               VerticalAlignment="Center"
                               FontSize="18.667"
                               Text="{DynamicResource Lang_StartWindow_RecentFiles}"
                               TextWrapping="Wrap" />
                </Border>
            </Grid>
        </Grid>
        <Grid x:Name="Grid_Product"
              Grid.Row="2"
              Width="965"
              Height="175">

            <ListBox Height="150"
                     Margin="0"
                     VerticalAlignment="Top"
                     Background="#FF373B3C"
                     BorderBrush="{x:Null}"
                     BorderThickness="0.5"
                     FontSize="13.333"
                     IsManipulationEnabled="True"
                     ItemContainerStyle="{DynamicResource ListBoxItemStyle22}"
                     ItemTemplate="{DynamicResource DataTemplate_productInfoListBox}"
                     ItemsPanel="{DynamicResource ItemsPanelTemplate_startWindow_Product}"
                     ItemsSource="{Binding ProductInfoCollection,
                                           Mode=TwoWay}"
                     ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                     ScrollViewer.VerticalScrollBarVisibility="Hidden"
                     SelectedIndex="{Binding SelectedProductIndex,
                                             Mode=TwoWay}"
                     Style="{DynamicResource ListBoxStyle_startWindow}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseMove">
                        <cmd:EventToCommand Command="{Binding CmdGotFocusWithProductList, Mode=OneWay}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeave">
                        <cmd:EventToCommand Command="{Binding CmdLostFocusWithProductList, Mode=OneWay}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListBox>

            <Button Width="25"
                    Height="70"
                    Margin="8,20,0,35"
                    HorizontalAlignment="Left"
                    BorderBrush="Black"
                    Command="{Binding CmdProductForward,
                                      Mode=OneWay}"
                    Content="&lt;"
                    FontSize="24"
                    Foreground="Gainsboro"
                    IsCancel="True"
                    Style="{DynamicResource ButtonStyleLeft}"
                    Visibility="{Binding IsMouseOver,
                                         Converter={StaticResource BooleanToVisibilityConverter},
                                         Mode=TwoWay}">
                <Button.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#FF5D5D5D" />
                        <GradientStop Offset="1" Color="#FF1C1C1C" />
                    </LinearGradientBrush>
                </Button.Background>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseMove">
                        <cmd:EventToCommand Command="{Binding CmdGotFocusWithProductList, Mode=OneWay}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Width="25"
                    Height="70"
                    Margin="0,20,8,35"
                    HorizontalAlignment="Right"
                    BorderBrush="Black"
                    Command="{Binding CmdProductBack,
                                      Mode=OneWay}"
                    Content="&gt;"
                    FontSize="24"
                    Foreground="Gainsboro"
                    IsCancel="True"
                    Style="{DynamicResource ButtonStyleRight}"
                    Visibility="{Binding IsMouseOver,
                                         Converter={StaticResource BooleanToVisibilityConverter1},
                                         Mode=TwoWay}">
                <Button.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#FF1C1C1C" />
                        <GradientStop Offset="1" Color="#FF646464" />
                    </LinearGradientBrush>
                </Button.Background>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseMove">
                        <cmd:EventToCommand Command="{Binding CmdGotFocusWithProductList, Mode=OneWay}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Nova_SmartLCT_UI:ButtonCollectionControl Width="Auto"
                                                      Height="Auto"
                                                      Margin="0,0,0,8"
                                                      HorizontalAlignment="Stretch"
                                                      VerticalAlignment="Bottom"
                                                      Background="{x:Null}"
                                                      ButtonCollectionRealParams="{Binding ProductInfoCollection,
                                                                                           Mode=TwoWay}"
                                                      DataContext="{Binding Source={StaticResource StartWindow_VMDataSource}}"
                                                      ParentWidth="{Binding Width,
                                                                            ElementName=Grid_Product,
                                                                            Mode=TwoWay}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseMove">
                        <cmd:EventToCommand Command="{Binding CmdGotFocusWithProductList, Mode=OneWay}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeave">
                        <cmd:EventToCommand Command="{Binding CmdLostFocusWithProductList, Mode=OneWay}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Nova_SmartLCT_UI:ButtonCollectionControl>

        </Grid>

    </Grid>
</MetroUI:MetroWindow>
