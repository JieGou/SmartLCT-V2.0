<MetroUI:MetroWindow x:Class="Nova.SmartLCT.UI.Window_PeripheralsConfig"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:MetroUI="clr-namespace:Nova.SmartLCT.UI.MetroUI;assembly=Nova.SmartLCT.UI.MetroUI"
                     xmlns:Nova_SmartLCT_Interface="clr-namespace:Nova.SmartLCT.Interface;assembly=Nova.SmartLCT.Interface.CommonData"
                     xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:local="clr-namespace:Nova.SmartLCT.UI"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     Title="{DynamicResource Lang_Bright_PeripheralSettingTitle}"
                     Width="778"
                     Height="782.667"
                     Background="#FF303435"
                     mc:Ignorable="d">
    <MetroUI:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ProjectDataSources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Width" Value="8" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Cursor" Value="SizeWE" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGridColumnHeaderStyle_common" TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid>
                                <Themes:DataGridHeaderBorder Background="#FF373737"
                                                             BorderBrush="#FF95F329"
                                                             BorderThickness="{TemplateBinding BorderThickness}"
                                                             IsClickable="{TemplateBinding CanUserSort}"
                                                             IsHovered="{TemplateBinding IsMouseOver}"
                                                             IsPressed="{TemplateBinding IsPressed}"
                                                             Padding="{TemplateBinding Padding}"
                                                             SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                                             SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                                             SortDirection="{TemplateBinding SortDirection}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Themes:DataGridHeaderBorder>
                                <Thumb x:Name="PART_LeftHeaderGripper"
                                       HorizontalAlignment="Left"
                                       Background="#00414245"
                                       Foreground="Gainsboro"
                                       Style="{StaticResource ColumnHeaderGripperStyle}" />
                                <Thumb x:Name="PART_RightHeaderGripper"
                                       HorizontalAlignment="Right"
                                       Background="#00414245"
                                       Foreground="Gainsboro"
                                       Style="{StaticResource ColumnHeaderGripperStyle}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGridCellStyle_common" TargetType="{x:Type DataGridCell}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#FFA0A0A0" />
                        <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
            			<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <!--<Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>-->
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Nova_SmartLCT_Interface:WeekList2StringConverter x:Key="WeekList2StringConverter" />
            <Nova_SmartLCT_Interface:BrightPercentAvailableConverter x:Key="BrightPercentAvailableConverter" />
            <LinearGradientBrush x:Key="MenuItemSelectionFill" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0" Color="#34C5EBFF" />
                <GradientStop Offset="1" Color="#3481D8FF" />
            </LinearGradientBrush>
            <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
            <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                <Grid SnapsToDevicePixels="true">
                    <Rectangle x:Name="Bg"
                               Fill="{TemplateBinding Background}"
                               RadiusX="2"
                               RadiusY="2"
                               Stroke="{TemplateBinding BorderBrush}"
                               StrokeThickness="1" />
                    <Rectangle x:Name="InnerBorder"
                               Margin="1"
                               RadiusX="2"
                               RadiusY="2" />
                    <Grid x:Name="grid">
                        <Grid.Background>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="#FF818181" />
                                <GradientStop Offset="1" Color="#FF818181" />
                                <GradientStop Offset="0.005" Color="#FF818181" />
                                <GradientStop Offset="0.01" Color="#FF4F4F4F" />
                                <GradientStop Offset="0.995" Color="#FF818181" />
                                <GradientStop Offset="0.99" Color="#FF4F4F4F" />
                            </LinearGradientBrush>
                        </Grid.Background>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"
                                              MinWidth="24"
                                              SharedSizeGroup="MenuItemIconColumnGroup" />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="37" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                            <ColumnDefinition Width="17" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="Icon"
                                          Margin="1"
                                          VerticalAlignment="Center"
                                          ContentSource="Icon"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border x:Name="GlyphPanel"
                                Width="22"
                                Height="22"
                                Margin="1"
                                Background="#E6EFF4"
                                BorderBrush="{x:Null}"
                                BorderThickness="0"
                                CornerRadius="3"
                                Visibility="Hidden">
                            <Path x:Name="Glyph"
                                  Width="9"
                                  Height="11"
                                  Data="{StaticResource Checkmark}"
                                  Fill="#0C12A1"
                                  FlowDirection="LeftToRight" />
                        </Border>
                        <ContentPresenter Grid.Column="2"
                                          Margin="{TemplateBinding Padding}"
                                          ContentSource="Header"
                                          OpacityMask="Black"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <TextBlock x:Name="textBlock"
                                   Grid.Column="4"
                                   Margin="{TemplateBinding Padding}"
                                   Foreground="#FF9D9D9D"
                                   Text="{TemplateBinding InputGestureText}" />
                    </Grid>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Bg" Property="Fill" Value="{StaticResource MenuItemSelectionFill}" />
                        <Setter TargetName="Bg" Property="Stroke" Value="#8071CBF1" />
                        <Setter TargetName="InnerBorder" Property="Stroke" Value="#40FFFFFF" />
                        <Setter TargetName="grid" Property="Background" Value="#FF6E6E6E" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="#FF9D9D9D" />
                        <Setter TargetName="GlyphPanel" Property="Background" Value="#EEE9E9" />
                        <Setter TargetName="GlyphPanel" Property="BorderBrush" Value="#DBD6D6" />
                        <Setter TargetName="Glyph" Property="Fill" Value="#848589" />
                        <Setter TargetName="textBlock" Property="Foreground" Value="#FF9D9D9D" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="MenuItemStyleParent" TargetType="{x:Type MenuItem}">
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Padding" Value="7,2,8,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Padding" Value="7,2,8,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Padding" Value="2,3,2,3" />
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="Padding" Value="2,3,2,3" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DataGridRowStyle_common" TargetType="{x:Type DataGridRow}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                <Setter Property="ValidationErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Margin="2,0,0,0"
                                       VerticalAlignment="Center"
                                       Background="Gray"
                                       Foreground="White"
                                       Text="!" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border x:Name="DGR_Border"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="#FF4B4B4B"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Column="1"
                                                            HorizontalAlignment="Stretch"
                                                            ItemsPanel="{TemplateBinding ItemsPanel}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <DataGridDetailsPresenter Grid.Row="1"
                                                              Grid.Column="1"
                                                              SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen,
                                                                                                                             ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                                                                                                                             Converter={x:Static DataGrid.RowDetailsScrollingConverter},
                                                                                                                             RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                              Visibility="{TemplateBinding DetailsVisibility}" />
                                    <DataGridRowHeader Grid.RowSpan="2"
                                                       Foreground="Gainsboro"
                                                       SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                       Visibility="{Binding HeadersVisibility,
                                                                            ConverterParameter={x:Static DataGridHeadersVisibility.Row},
                                                                            Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />
            <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Height" Value="8" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Cursor" Value="SizeNS" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGridRowHeaderStyle_common" TargetType="{x:Type DataGridRowHeader}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                            <Grid Background="#FF414245">
                                <Themes:DataGridHeaderBorder Background="{TemplateBinding Background}"
                                                             BorderBrush="#FF414245"
                                                             BorderThickness="{TemplateBinding BorderThickness}"
                                                             IsHovered="{TemplateBinding IsMouseOver}"
                                                             IsPressed="{TemplateBinding IsPressed}"
                                                             IsSelected="{TemplateBinding IsRowSelected}"
                                                             Orientation="Horizontal"
                                                             Padding="{TemplateBinding Padding}"
                                                             SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                                             SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                    <StackPanel Background="#FF414245" Orientation="Horizontal">
                                        <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <Control Foreground="Gainsboro"
                                                 SnapsToDevicePixels="false"
                                                 Template="{Binding ValidationErrorTemplate,
                                                                    RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                                 Visibility="{Binding (Validation.HasError),
                                                                      Converter={StaticResource bool2VisibilityConverter},
                                                                      RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
                                    </StackPanel>
                                </Themes:DataGridHeaderBorder>
                                <Thumb x:Name="PART_TopHeaderGripper"
                                       VerticalAlignment="Top"
                                       Background="#00414245"
                                       Style="{StaticResource RowHeaderGripperStyle}" />
                                <Thumb x:Name="PART_BottomHeaderGripper"
                                       VerticalAlignment="Bottom"
                                       Background="#00414245"
                                       Style="{StaticResource RowHeaderGripperStyle}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Rectangle x:Name="Border"
                                           Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                           SnapsToDevicePixels="True" />
                                <Polygon x:Name="Arrow"
                                         Margin="8,8,3,3"
                                         HorizontalAlignment="Right"
                                         VerticalAlignment="Bottom"
                                         Fill="Black"
                                         Opacity="0.15"
                                         Points="0,10 10,10 10,0"
                                         Stretch="Uniform" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Stroke" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderBrush" Value="#FF688CAF" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGrid}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                    <ScrollViewer.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <Button Width="{Binding CellsPanelHorizontalOffset,
                                                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                        Command="{x:Static DataGrid.SelectAllCommand}"
                                                        Focusable="false"
                                                        Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                                                                      TypeInTargetAssembly={x:Type DataGrid}}}"
                                                        Visibility="{Binding HeadersVisibility,
                                                                             ConverterParameter={x:Static DataGridHeadersVisibility.All},
                                                                             Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                             RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                                Grid.Column="1"
                                                                                Visibility="{Binding HeadersVisibility,
                                                                                                     ConverterParameter={x:Static DataGridHeadersVisibility.Column},
                                                                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                                                     RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                        Grid.Row="1"
                                                                        Grid.ColumnSpan="2"
                                                                        CanContentScroll="{TemplateBinding CanContentScroll}" />
                                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                                           Grid.Row="1"
                                                           Grid.Column="2"
                                                           Maximum="{TemplateBinding ScrollableHeight}"
                                                           Orientation="Vertical"
                                                           ViewportSize="{TemplateBinding ViewportHeight}"
                                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                           Value="{Binding VerticalOffset,
                                                                           Mode=OneWay,
                                                                           RelativeSource={RelativeSource TemplatedParent}}" />
                                                <Grid Grid.Row="2" Grid.Column="1">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                               Grid.Column="1"
                                                               Maximum="{TemplateBinding ScrollableWidth}"
                                                               Orientation="Horizontal"
                                                               ViewportSize="{TemplateBinding ViewportWidth}"
                                                               Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                               Value="{Binding HorizontalOffset,
                                                                               Mode=OneWay,
                                                                               RelativeSource={RelativeSource TemplatedParent}}" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </ScrollViewer.Template>
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsGrouping" Value="true">
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DataGridColumnHeaderStyle_AutoAdjust" TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid>
                                <Themes:DataGridHeaderBorder Background="#FF303435"
                                                             BorderBrush="{TemplateBinding BorderBrush}"
                                                             BorderThickness="{TemplateBinding BorderThickness}"
                                                             IsClickable="{TemplateBinding CanUserSort}"
                                                             IsHovered="{TemplateBinding IsMouseOver}"
                                                             IsPressed="{TemplateBinding IsPressed}"
                                                             Padding="{TemplateBinding Padding}"
                                                             SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                                             SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                                             SortDirection="{TemplateBinding SortDirection}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Themes:DataGridHeaderBorder>
                                <Thumb x:Name="PART_LeftHeaderGripper"
                                       HorizontalAlignment="Left"
                                       Foreground="Gainsboro"
                                       Style="{StaticResource ColumnHeaderGripperStyle}" />
                                <Thumb x:Name="PART_RightHeaderGripper"
                                       HorizontalAlignment="Right"
                                       Foreground="Gainsboro"
                                       Style="{StaticResource ColumnHeaderGripperStyle}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="NumericUpDownControlTemplate">
                <Grid>
                    <AdornedElementPlaceholder ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />

                    <TextBlock Width="32"
                               Height="16"
                               Margin="0,0,0,0"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Bottom"
                               Foreground="Green"
                               Text="{TemplateBinding ToolTip}"
                               ToolTip="{TemplateBinding ToolTip}" />
                </Grid>
            </ControlTemplate>
            <Style x:Key="DataGridCellStyle_AutoAdjust" TargetType="{x:Type DataGridCell}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource NumericUpDownControlTemplate}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  OpacityMask="Black"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#FFA0A0A0" />
                        <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <!--<Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="Background" Value="Blue"/>
                    <Setter Property="Foreground" Value="Black"/>-->
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="TextBoxStyle_Auto" TargetType="{x:Type TextBox}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Foreground" Value="Gainsboro" />
                <Setter Property="Background" Value="#FF606060" />
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="Background" Value="Red" />
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DataGridRowStyle_autoadjust" TargetType="{x:Type DataGridRow}">
                <Setter Property="Background" Value="#FF4B4B4B" />
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                <Setter Property="ValidationErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Margin="2,0,0,0"
                                       VerticalAlignment="Center"
                                       FontWeight="Bold"
                                       Foreground="Red"
                                       Text="!" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border x:Name="DGR_Border"
                                    Background="#FF4B4B4B"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Column="1"
                                                            ItemsPanel="{TemplateBinding ItemsPanel}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <DataGridDetailsPresenter Grid.Row="1"
                                                              Grid.Column="1"
                                                              SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen,
                                                                                                                             ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                                                                                                                             Converter={x:Static DataGrid.RowDetailsScrollingConverter},
                                                                                                                             RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                              Visibility="{TemplateBinding DetailsVisibility}" />
                                    <DataGridRowHeader Grid.RowSpan="2"
                                                       Background="#FF4B4B4B"
                                                       SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                       Visibility="{Binding HeadersVisibility,
                                                                            ConverterParameter={x:Static DataGridHeadersVisibility.Row},
                                                                            Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGridRowHeaderStyle_Auto" TargetType="{x:Type DataGridRowHeader}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                            <Grid>
                                <Themes:DataGridHeaderBorder Background="{TemplateBinding Background}"
                                                             BorderBrush="{TemplateBinding BorderBrush}"
                                                             BorderThickness="1"
                                                             IsHovered="{TemplateBinding IsMouseOver}"
                                                             IsPressed="{TemplateBinding IsPressed}"
                                                             IsSelected="{TemplateBinding IsRowSelected}"
                                                             Orientation="Horizontal"
                                                             Padding="{TemplateBinding Padding}"
                                                             SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                                             SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                    <StackPanel Orientation="Horizontal">
                                        <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <Control SnapsToDevicePixels="false"
                                                 Template="{Binding ValidationErrorTemplate,
                                                                    RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                                 Visibility="{Binding (Validation.HasError),
                                                                      Converter={StaticResource bool2VisibilityConverter},
                                                                      RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
                                    </StackPanel>
                                </Themes:DataGridHeaderBorder>
                                <Thumb x:Name="PART_TopHeaderGripper"
                                       VerticalAlignment="Top"
                                       Style="{StaticResource RowHeaderGripperStyle}" />
                                <Thumb x:Name="PART_BottomHeaderGripper"
                                       VerticalAlignment="Bottom"
                                       Style="{StaticResource RowHeaderGripperStyle}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </MetroUI:MetroWindow.Resources>
    <Grid DataContext="{Binding Source={StaticResource Window_PeripheralsConfig_VMDataSource}}">
        <GroupBox Height="461.831"
                  Margin="10,15,10,0"
                  VerticalAlignment="Top"
                  Foreground="Gainsboro"
                  Header="{DynamicResource Lang_Bright_EnvironmentScreenBrightMap}">
            <DataGrid Name="grid_brightMapping"
                      Margin="5,15,5,4"
                      AutoGenerateColumns="False"
                      Background="#FF414244"
                      CellStyle="{DynamicResource DataGridCellStyle_AutoAdjust}"
                      ColumnHeaderHeight="26"
                      ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle_AutoAdjust}"
                      Foreground="Gainsboro"
                      ItemsSource="{Binding EnvirAndDisplayBrightCollection}"
                      RowHeaderStyle="{DynamicResource DataGridRowHeaderStyle_Auto}"
                      RowHeight="28"
                      RowStyle="{DynamicResource DataGridRowStyle_autoadjust}"
                      TabIndex="3">
                <DataGrid.Columns>

                    <DataGridTextColumn Width="187"
                                        CellStyle="{StaticResource DataGridCellStyle_AutoAdjust}"
                                        EditingElementStyle="{StaticResource TextBoxStyle_Auto}"
                                        Foreground="Gainsboro"
                                        Header="{DynamicResource Lang_Bright_PEnvironmentBright}">
                        <DataGridTextColumn.Binding>
                            <Binding Mode="TwoWay"
                                     Path="EnvironmentBright"
                                     UpdateSourceTrigger="LostFocus"
                                     ValidatesOnDataErrors="True">
                                <Binding.ValidationRules>
                                    <local:EnvironmentBrightValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Width="*"
                                        CellStyle="{StaticResource DataGridCellStyle_AutoAdjust}"
                                        EditingElementStyle="{StaticResource TextBoxStyle_Auto}"
                                        Foreground="Gainsboro"
                                        Header="{DynamicResource Lang_Bright_PScreenBright}">
                        <DataGridTextColumn.Binding>
                            <Binding Mode="TwoWay"
                                     Path="DisplayBright"
                                     UpdateSourceTrigger="LostFocus"
                                     ValidatesOnDataErrors="True">
                                <Binding.ValidationRules>
                                    <local:ScreenBrightValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>
        <GroupBox Height="176.837"
                  Margin="10,506.831,10,0"
                  VerticalAlignment="Top"
                  Foreground="Gainsboro"
                  Header="{DynamicResource Lang_Bright_LightSensorSelect}">
            <Grid Margin="0,10,0,4">
                <DataGrid Margin="5,5,5,13.837"
                          HorizontalAlignment="Stretch"
                          AutoGenerateColumns="False"
                          Background="#FF414244"
                          BorderBrush="#FF545454"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          CellStyle="{DynamicResource DataGridCellStyle_common}"
                          ColumnHeaderHeight="28"
                          ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle_common}"
                          Foreground="Gainsboro"
                          IsSynchronizedWithCurrentItem="False"
                          ItemsSource="{Binding PeripheralList}"
                          MinRowHeight="30"
                          RowHeaderStyle="{DynamicResource DataGridRowHeaderStyle_common}"
                          RowStyle="{DynamicResource DataGridRowStyle_common}"
                          SelectedItem="{Binding SelectedSmartBrightItem,
                                                 Mode=TwoWay}"
                          Style="{DynamicResource DataGridStyle1}">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="{DynamicResource Lang_Bright_IsStart}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding IsSelected,
                                                                  Mode=TwoWay,
                                                                  UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!--<DataGridCheckBoxColumn Header="{DynamicResource Lang_Bright_IsStart}" Binding="{Binding IsStartUsing, Mode=TwoWay}"/>-->
                        <DataGridTextColumn Width="*"
                                            Binding="{Binding LocationString}"
                                            Header="{DynamicResource Lang_Bright_ControlMode}"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Width="185"
                                            Binding="{Binding Location.SensorValue}"
                                            CanUserResize="false"
                                            Header="{DynamicResource Lang_Bright_PEnvironmentBright}"
                                            IsReadOnly="True" />
                    </DataGrid.Columns>
                    <!--DataGrid.ContextMenu>
						<ContextMenu  Foreground="White" Background="#FF4F4F4F">
							<MenuItem ItemContainerStyle="{DynamicResource MenuItemStyleParent}" Header="{DynamicResource Lang_Bright_Add}" Command="{Binding CmdAddTimingAdjustData}"/>
							<MenuItem ItemContainerStyle="{DynamicResource MenuItemStyleParent}" Header="{DynamicResource Lang_Bright_Edit}" Command="{Binding CmdEditTimingAdjustData}"/>
							<MenuItem Header="{DynamicResource Lang_Bright_Delete}" ItemContainerStyle="{DynamicResource MenuItemStyleParent}" Command="{Binding CmdDeleteSelectedTimingAdjustData}"/>
							<MenuItem Header="{DynamicResource Lang_Bright_ClearList}" ItemContainerStyle="{DynamicResource MenuItemStyleParent}" Command="{Binding CmdClearTimingAdjustData}"/>
						</ContextMenu>
					</DataGrid.ContextMenu-->
                </DataGrid>
            </Grid>
        </GroupBox>
        <Button x:Name="button_ok"
                Width="57"
                Height="22"
                Margin="0,0,114,8.836"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Click="button_ok_Click"
                Command="{Binding CmdSetDefalutCurGain,
                                  Mode=OneWay}"
                Content="{DynamicResource Lang_Global_OK}" />
        <Button x:Name="button_cancel"
                Width="57"
                Height="22"
                Margin="0,0,43.333,8.836"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Click="button_cancel_Click"
                Content="{DynamicResource Lang_Global_Cancel}"
                RenderTransformOrigin="1.632,0.485" />
        <Button x:Name="button_fastSet"
                Width="112.5"
                Height="22"
                Margin="42,0,0,8.836"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                Command="{Binding CmdFastSegmentation,
                                  Mode=OneWay}"
                Content="{DynamicResource Lang_Bright_FastSegmentation}" />
    </Grid>
</MetroUI:MetroWindow>
